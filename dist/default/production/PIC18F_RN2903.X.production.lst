

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed May 27 12:01:29 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 09/04/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18LF45K50 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataBANK0
    87  000BF8                     __pidataBANK0:
    88                           	callstack 0
    89                           
    90                           ;initializer for config_RN2903@F4929
    91  000BF8  FC                 	db	252
    92  000BF9  E1                 	db	225
    93  000BFA  1E                 	db	30
    94  000BFB  AA                 	db	170
    95  000BFC  49                 	db	73
    96  000BFD  0F                 	db	15
    97  000BFE  FB                 	db	251
    98  000BFF  F5                 	db	245
    99  000C00  19                 	db	25
   100  000C01  D4                 	db	212
   101  000C02  E2                 	db	226
   102  000C03  E5                 	db	229
   103  000C04  8F                 	db	143
   104  000C05  81                 	db	129
   105  000C06  DD                 	db	221
   106  000C07  85                 	db	133
   107                           
   108                           ;initializer for config_RN2903@F4927
   109  000C08  EF                 	db	239
   110  000C09  FE                 	db	254
   111  000C0A  1D                 	db	29
   112  000C0B  AD                 	db	173
   113  000C0C  76                 	db	118
   114  000C0D  A5                 	db	165
   115  000C0E  81                 	db	129
   116  000C0F  26                 	db	38
   117  000C10  A0                 	db	160
   118  000C11  59                 	db	89
   119  000C12  F5                 	db	245
   120  000C13  9C                 	db	156
   121  000C14  A4                 	db	164
   122  000C15  FC                 	db	252
   123  000C16  74                 	db	116
   124  000C17  9A                 	db	154
   125                           
   126                           ;initializer for config_RN2903@F4925
   127  000C18  27                 	db	39
   128  000C19  00                 	db	0
   129  000C1A  00                 	db	0
   130  000C1B  46                 	db	70
   131                           
   132                           	psect	mediumconst
   133  007E36                     __pmediumconst:
   134                           	callstack 0
   135  007E36  00                 	db	0
   136  007E37                     _dpowers:
   137                           	callstack 0
   138  007E37  0001               	dw	1
   139  007E39  000A               	dw	10
   140  007E3B  0064               	dw	100
   141  007E3D  03E8               	dw	1000
   142  007E3F  2710               	dw	10000
   143  007E41                     __end_of_dpowers:
   144                           	callstack 0
   145  007E41                     _hexpowers:
   146                           	callstack 0
   147  007E41  0001               	dw	1
   148  007E43  0010               	dw	16
   149  007E45  0100               	dw	256
   150  007E47  1000               	dw	4096
   151  007E49                     __end_of_hexpowers:
   152                           	callstack 0
   153  0000                     _ANSELA	set	3931
   154  0000                     _ANSELE	set	3935
   155  0000                     _ANSELB	set	3932
   156  0000                     _ANSELC	set	3933
   157  0000                     _ANSELD	set	3934
   158  0000                     _PIR1bits	set	3998
   159  0000                     _RCONbits	set	4048
   160  0000                     _RCREG1	set	4014
   161  0000                     _RCSTA1bits	set	4011
   162  0000                     _TXREG1	set	4013
   163  0000                     _TXSTA1bits	set	4012
   164  0000                     _SPBRGH1	set	4016
   165  0000                     _SPBRG1	set	4015
   166  0000                     _TXSTA1	set	4012
   167  0000                     _RCSTA1	set	4011
   168  0000                     _BAUDCON1	set	4024
   169  0000                     _PIE1bits	set	3997
   170  0000                     _INTCONbits	set	4082
   171  0000                     _INTCON2bits	set	4081
   172  0000                     _WPUB	set	3973
   173  0000                     _TRISD	set	3989
   174  0000                     _TRISC	set	3988
   175  0000                     _TRISB	set	3987
   176  0000                     _TRISA	set	3986
   177  0000                     _TRISE	set	3990
   178  0000                     _LATC	set	3979
   179  0000                     _LATB	set	3978
   180  0000                     _LATA	set	3977
   181  0000                     _LATD	set	3980
   182  0000                     _LATE	set	3981
   183  0000                     _ACTCON	set	4021
   184  0000                     _OSCTUNE	set	3995
   185  0000                     _OSCCON2	set	4050
   186  0000                     _OSCCON	set	4051
   187  0000                     _PLLRDY	set	32407
   188  007E49                     STR_16:
   189  007E49  6D                 	db	109	;'m'
   190  007E4A  61                 	db	97	;'a'
   191  007E4B  63                 	db	99	;'c'
   192  007E4C  20                 	db	32
   193  007E4D  73                 	db	115	;'s'
   194  007E4E  65                 	db	101	;'e'
   195  007E4F  74                 	db	116	;'t'
   196  007E50  20                 	db	32
   197  007E51  6E                 	db	110	;'n'
   198  007E52  77                 	db	119	;'w'
   199  007E53  6B                 	db	107	;'k'
   200  007E54  73                 	db	115	;'s'
   201  007E55  6B                 	db	107	;'k'
   202  007E56  65                 	db	101	;'e'
   203  007E57  79                 	db	121	;'y'
   204  007E58  20                 	db	32
   205  007E59  25                 	db	37
   206  007E5A  30                 	db	48	;'0'
   207  007E5B  32                 	db	50	;'2'
   208  007E5C  78                 	db	120	;'x'
   209  007E5D  25                 	db	37
   210  007E5E  30                 	db	48	;'0'
   211  007E5F  32                 	db	50	;'2'
   212  007E60  78                 	db	120	;'x'
   213  007E61  25                 	db	37
   214  007E62  30                 	db	48	;'0'
   215  007E63  32                 	db	50	;'2'
   216  007E64  78                 	db	120	;'x'
   217  007E65  25                 	db	37
   218  007E66  30                 	db	48	;'0'
   219  007E67  32                 	db	50	;'2'
   220  007E68  78                 	db	120	;'x'
   221  007E69  25                 	db	37
   222  007E6A  30                 	db	48	;'0'
   223  007E6B  32                 	db	50	;'2'
   224  007E6C  78                 	db	120	;'x'
   225  007E6D  25                 	db	37
   226  007E6E  30                 	db	48	;'0'
   227  007E6F  32                 	db	50	;'2'
   228  007E70  78                 	db	120	;'x'
   229  007E71  25                 	db	37
   230  007E72  30                 	db	48	;'0'
   231  007E73  32                 	db	50	;'2'
   232  007E74  78                 	db	120	;'x'
   233  007E75  25                 	db	37
   234  007E76  30                 	db	48	;'0'
   235  007E77  32                 	db	50	;'2'
   236  007E78  78                 	db	120	;'x'
   237  007E79  25                 	db	37
   238  007E7A  30                 	db	48	;'0'
   239  007E7B  32                 	db	50	;'2'
   240  007E7C  78                 	db	120	;'x'
   241  007E7D  25                 	db	37
   242  007E7E  30                 	db	48	;'0'
   243  007E7F  32                 	db	50	;'2'
   244  007E80  78                 	db	120	;'x'
   245  007E81  25                 	db	37
   246  007E82  30                 	db	48	;'0'
   247  007E83  32                 	db	50	;'2'
   248  007E84  78                 	db	120	;'x'
   249  007E85  25                 	db	37
   250  007E86  30                 	db	48	;'0'
   251  007E87  32                 	db	50	;'2'
   252  007E88  78                 	db	120	;'x'
   253  007E89  25                 	db	37
   254  007E8A  30                 	db	48	;'0'
   255  007E8B  32                 	db	50	;'2'
   256  007E8C  78                 	db	120	;'x'
   257  007E8D  25                 	db	37
   258  007E8E  30                 	db	48	;'0'
   259  007E8F  32                 	db	50	;'2'
   260  007E90  78                 	db	120	;'x'
   261  007E91  25                 	db	37
   262  007E92  30                 	db	48	;'0'
   263  007E93  32                 	db	50	;'2'
   264  007E94  78                 	db	120	;'x'
   265  007E95  25                 	db	37
   266  007E96  30                 	db	48	;'0'
   267  007E97  32                 	db	50	;'2'
   268  007E98  78                 	db	120	;'x'
   269  007E99  0D                 	db	13
   270  007E9A  0A                 	db	10
   271  007E9B  00                 	db	0
   272  007E9C                     STR_14:
   273  007E9C  6D                 	db	109	;'m'
   274  007E9D  61                 	db	97	;'a'
   275  007E9E  63                 	db	99	;'c'
   276  007E9F  20                 	db	32
   277  007EA0  73                 	db	115	;'s'
   278  007EA1  65                 	db	101	;'e'
   279  007EA2  74                 	db	116	;'t'
   280  007EA3  20                 	db	32
   281  007EA4  61                 	db	97	;'a'
   282  007EA5  70                 	db	112	;'p'
   283  007EA6  70                 	db	112	;'p'
   284  007EA7  73                 	db	115	;'s'
   285  007EA8  6B                 	db	107	;'k'
   286  007EA9  65                 	db	101	;'e'
   287  007EAA  79                 	db	121	;'y'
   288  007EAB  20                 	db	32
   289  007EAC  25                 	db	37
   290  007EAD  30                 	db	48	;'0'
   291  007EAE  32                 	db	50	;'2'
   292  007EAF  78                 	db	120	;'x'
   293  007EB0  25                 	db	37
   294  007EB1  30                 	db	48	;'0'
   295  007EB2  32                 	db	50	;'2'
   296  007EB3  78                 	db	120	;'x'
   297  007EB4  25                 	db	37
   298  007EB5  30                 	db	48	;'0'
   299  007EB6  32                 	db	50	;'2'
   300  007EB7  78                 	db	120	;'x'
   301  007EB8  25                 	db	37
   302  007EB9  30                 	db	48	;'0'
   303  007EBA  32                 	db	50	;'2'
   304  007EBB  78                 	db	120	;'x'
   305  007EBC  25                 	db	37
   306  007EBD  30                 	db	48	;'0'
   307  007EBE  32                 	db	50	;'2'
   308  007EBF  78                 	db	120	;'x'
   309  007EC0  25                 	db	37
   310  007EC1  30                 	db	48	;'0'
   311  007EC2  32                 	db	50	;'2'
   312  007EC3  78                 	db	120	;'x'
   313  007EC4  25                 	db	37
   314  007EC5  30                 	db	48	;'0'
   315  007EC6  32                 	db	50	;'2'
   316  007EC7  78                 	db	120	;'x'
   317  007EC8  25                 	db	37
   318  007EC9  30                 	db	48	;'0'
   319  007ECA  32                 	db	50	;'2'
   320  007ECB  78                 	db	120	;'x'
   321  007ECC  25                 	db	37
   322  007ECD  30                 	db	48	;'0'
   323  007ECE  32                 	db	50	;'2'
   324  007ECF  78                 	db	120	;'x'
   325  007ED0  25                 	db	37
   326  007ED1  30                 	db	48	;'0'
   327  007ED2  32                 	db	50	;'2'
   328  007ED3  78                 	db	120	;'x'
   329  007ED4  25                 	db	37
   330  007ED5  30                 	db	48	;'0'
   331  007ED6  32                 	db	50	;'2'
   332  007ED7  78                 	db	120	;'x'
   333  007ED8  25                 	db	37
   334  007ED9  30                 	db	48	;'0'
   335  007EDA  32                 	db	50	;'2'
   336  007EDB  78                 	db	120	;'x'
   337  007EDC  25                 	db	37
   338  007EDD  30                 	db	48	;'0'
   339  007EDE  32                 	db	50	;'2'
   340  007EDF  78                 	db	120	;'x'
   341  007EE0  25                 	db	37
   342  007EE1  30                 	db	48	;'0'
   343  007EE2  32                 	db	50	;'2'
   344  007EE3  78                 	db	120	;'x'
   345  007EE4  25                 	db	37
   346  007EE5  30                 	db	48	;'0'
   347  007EE6  32                 	db	50	;'2'
   348  007EE7  78                 	db	120	;'x'
   349  007EE8  25                 	db	37
   350  007EE9  30                 	db	48	;'0'
   351  007EEA  32                 	db	50	;'2'
   352  007EEB  78                 	db	120	;'x'
   353  007EEC  0D                 	db	13
   354  007EED  0A                 	db	10
   355  007EEE  00                 	db	0
   356  007EEF                     STR_12:
   357  007EEF  6D                 	db	109	;'m'
   358  007EF0  61                 	db	97	;'a'
   359  007EF1  63                 	db	99	;'c'
   360  007EF2  20                 	db	32
   361  007EF3  73                 	db	115	;'s'
   362  007EF4  65                 	db	101	;'e'
   363  007EF5  74                 	db	116	;'t'
   364  007EF6  20                 	db	32
   365  007EF7  64                 	db	100	;'d'
   366  007EF8  65                 	db	101	;'e'
   367  007EF9  76                 	db	118	;'v'
   368  007EFA  61                 	db	97	;'a'
   369  007EFB  64                 	db	100	;'d'
   370  007EFC  64                 	db	100	;'d'
   371  007EFD  72                 	db	114	;'r'
   372  007EFE  20                 	db	32
   373  007EFF  25                 	db	37
   374  007F00  30                 	db	48	;'0'
   375  007F01  32                 	db	50	;'2'
   376  007F02  78                 	db	120	;'x'
   377  007F03  25                 	db	37
   378  007F04  30                 	db	48	;'0'
   379  007F05  32                 	db	50	;'2'
   380  007F06  78                 	db	120	;'x'
   381  007F07  25                 	db	37
   382  007F08  30                 	db	48	;'0'
   383  007F09  32                 	db	50	;'2'
   384  007F0A  78                 	db	120	;'x'
   385  007F0B  25                 	db	37
   386  007F0C  30                 	db	48	;'0'
   387  007F0D  32                 	db	50	;'2'
   388  007F0E  78                 	db	120	;'x'
   389  007F0F  0D                 	db	13
   390  007F10  0A                 	db	10
   391  007F11  00                 	db	0
   392  007F12                     STR_6:
   393  007F12  6D                 	db	109	;'m'
   394  007F13  61                 	db	97	;'a'
   395  007F14  63                 	db	99	;'c'
   396  007F15  20                 	db	32
   397  007F16  73                 	db	115	;'s'
   398  007F17  65                 	db	101	;'e'
   399  007F18  74                 	db	116	;'t'
   400  007F19  20                 	db	32
   401  007F1A  63                 	db	99	;'c'
   402  007F1B  68                 	db	104	;'h'
   403  007F1C  20                 	db	32
   404  007F1D  73                 	db	115	;'s'
   405  007F1E  74                 	db	116	;'t'
   406  007F1F  61                 	db	97	;'a'
   407  007F20  74                 	db	116	;'t'
   408  007F21  75                 	db	117	;'u'
   409  007F22  73                 	db	115	;'s'
   410  007F23  20                 	db	32
   411  007F24  25                 	db	37
   412  007F25  64                 	db	100	;'d'
   413  007F26  20                 	db	32
   414  007F27  6F                 	db	111	;'o'
   415  007F28  66                 	db	102	;'f'
   416  007F29  66                 	db	102	;'f'
   417  007F2A  0D                 	db	13
   418  007F2B  0A                 	db	10
   419  007F2C  00                 	db	0
   420  007F2D                     STR_32:
   421  007F2D  6D                 	db	109	;'m'
   422  007F2E  61                 	db	97	;'a'
   423  007F2F  63                 	db	99	;'c'
   424  007F30  20                 	db	32
   425  007F31  74                 	db	116	;'t'
   426  007F32  78                 	db	120	;'x'
   427  007F33  20                 	db	32
   428  007F34  75                 	db	117	;'u'
   429  007F35  6E                 	db	110	;'n'
   430  007F36  63                 	db	99	;'c'
   431  007F37  6E                 	db	110	;'n'
   432  007F38  66                 	db	102	;'f'
   433  007F39  20                 	db	32
   434  007F3A  31                 	db	49	;'1'
   435  007F3B  20                 	db	32
   436  007F3C  33                 	db	51	;'3'
   437  007F3D  33                 	db	51	;'3'
   438  007F3E  33                 	db	51	;'3'
   439  007F3F  35                 	db	53	;'5'
   440  007F40  33                 	db	51	;'3'
   441  007F41  35                 	db	53	;'5'
   442  007F42  33                 	db	51	;'3'
   443  007F43  36                 	db	54	;'6'
   444  007F44  0D                 	db	13
   445  007F45  0A                 	db	10
   446  007F46  00                 	db	0
   447  007F47                     STR_4:
   448  007F47  6D                 	db	109	;'m'
   449  007F48  61                 	db	97	;'a'
   450  007F49  63                 	db	99	;'c'
   451  007F4A  20                 	db	32
   452  007F4B  73                 	db	115	;'s'
   453  007F4C  65                 	db	101	;'e'
   454  007F4D  74                 	db	116	;'t'
   455  007F4E  20                 	db	32
   456  007F4F  63                 	db	99	;'c'
   457  007F50  68                 	db	104	;'h'
   458  007F51  20                 	db	32
   459  007F52  73                 	db	115	;'s'
   460  007F53  74                 	db	116	;'t'
   461  007F54  61                 	db	97	;'a'
   462  007F55  74                 	db	116	;'t'
   463  007F56  75                 	db	117	;'u'
   464  007F57  73                 	db	115	;'s'
   465  007F58  20                 	db	32
   466  007F59  30                 	db	48	;'0'
   467  007F5A  20                 	db	32
   468  007F5B  6F                 	db	111	;'o'
   469  007F5C  6E                 	db	110	;'n'
   470  007F5D  0D                 	db	13
   471  007F5E  0A                 	db	10
   472  007F5F  00                 	db	0
   473  007F60                     STR_10:
   474  007F60  6D                 	db	109	;'m'
   475  007F61  61                 	db	97	;'a'
   476  007F62  63                 	db	99	;'c'
   477  007F63  20                 	db	32
   478  007F64  73                 	db	115	;'s'
   479  007F65  65                 	db	101	;'e'
   480  007F66  74                 	db	116	;'t'
   481  007F67  20                 	db	32
   482  007F68  72                 	db	114	;'r'
   483  007F69  78                 	db	120	;'x'
   484  007F6A  64                 	db	100	;'d'
   485  007F6B  65                 	db	101	;'e'
   486  007F6C  6C                 	db	108	;'l'
   487  007F6D  61                 	db	97	;'a'
   488  007F6E  79                 	db	121	;'y'
   489  007F6F  31                 	db	49	;'1'
   490  007F70  20                 	db	32
   491  007F71  25                 	db	37
   492  007F72  64                 	db	100	;'d'
   493  007F73  0D                 	db	13
   494  007F74  0A                 	db	10
   495  007F75  00                 	db	0
   496  007F76                     STR_8:
   497  007F76  6D                 	db	109	;'m'
   498  007F77  61                 	db	97	;'a'
   499  007F78  63                 	db	99	;'c'
   500  007F79  20                 	db	32
   501  007F7A  73                 	db	115	;'s'
   502  007F7B  65                 	db	101	;'e'
   503  007F7C  74                 	db	116	;'t'
   504  007F7D  20                 	db	32
   505  007F7E  61                 	db	97	;'a'
   506  007F7F  64                 	db	100	;'d'
   507  007F80  72                 	db	114	;'r'
   508  007F81  20                 	db	32
   509  007F82  6F                 	db	111	;'o'
   510  007F83  66                 	db	102	;'f'
   511  007F84  66                 	db	102	;'f'
   512  007F85  0D                 	db	13
   513  007F86  0A                 	db	10
   514  007F87  00                 	db	0
   515  007F88                     STR_34:
   516  007F88  30                 	db	48	;'0'
   517  007F89  31                 	db	49	;'1'
   518  007F8A  32                 	db	50	;'2'
   519  007F8B  33                 	db	51	;'3'
   520  007F8C  34                 	db	52	;'4'
   521  007F8D  35                 	db	53	;'5'
   522  007F8E  36                 	db	54	;'6'
   523  007F8F  37                 	db	55	;'7'
   524  007F90  38                 	db	56	;'8'
   525  007F91  39                 	db	57	;'9'
   526  007F92  61                 	db	97	;'a'
   527  007F93  62                 	db	98	;'b'
   528  007F94  63                 	db	99	;'c'
   529  007F95  64                 	db	100	;'d'
   530  007F96  65                 	db	101	;'e'
   531  007F97  66                 	db	102	;'f'
   532  007F98  00                 	db	0
   533  007F99                     STR_28:
   534  007F99  72                 	db	114	;'r'
   535  007F9A  61                 	db	97	;'a'
   536  007F9B  64                 	db	100	;'d'
   537  007F9C  69                 	db	105	;'i'
   538  007F9D  6F                 	db	111	;'o'
   539  007F9E  20                 	db	32
   540  007F9F  67                 	db	103	;'g'
   541  007FA0  65                 	db	101	;'e'
   542  007FA1  74                 	db	116	;'t'
   543  007FA2  20                 	db	32
   544  007FA3  66                 	db	102	;'f'
   545  007FA4  72                 	db	114	;'r'
   546  007FA5  65                 	db	101	;'e'
   547  007FA6  71                 	db	113	;'q'
   548  007FA7  0D                 	db	13
   549  007FA8  0A                 	db	10
   550  007FA9  00                 	db	0
   551  007FAA                     STR_18:
   552  007FAA  6D                 	db	109	;'m'
   553  007FAB  61                 	db	97	;'a'
   554  007FAC  63                 	db	99	;'c'
   555  007FAD  20                 	db	32
   556  007FAE  73                 	db	115	;'s'
   557  007FAF  65                 	db	101	;'e'
   558  007FB0  74                 	db	116	;'t'
   559  007FB1  20                 	db	32
   560  007FB2  64                 	db	100	;'d'
   561  007FB3  72                 	db	114	;'r'
   562  007FB4  20                 	db	32
   563  007FB5  32                 	db	50	;'2'
   564  007FB6  0D                 	db	13
   565  007FB7  0A                 	db	10
   566  007FB8  00                 	db	0
   567  007FB9                     STR_24:
   568  007FB9  6D                 	db	109	;'m'
   569  007FBA  61                 	db	97	;'a'
   570  007FBB  63                 	db	99	;'c'
   571  007FBC  20                 	db	32
   572  007FBD  6A                 	db	106	;'j'
   573  007FBE  6F                 	db	111	;'o'
   574  007FBF  69                 	db	105	;'i'
   575  007FC0  6E                 	db	110	;'n'
   576  007FC1  20                 	db	32
   577  007FC2  61                 	db	97	;'a'
   578  007FC3  62                 	db	98	;'b'
   579  007FC4  70                 	db	112	;'p'
   580  007FC5  0D                 	db	13
   581  007FC6  0A                 	db	10
   582  007FC7  00                 	db	0
   583  007FC8                     STR_2:
   584  007FC8  73                 	db	115	;'s'
   585  007FC9  79                 	db	121	;'y'
   586  007FCA  73                 	db	115	;'s'
   587  007FCB  20                 	db	32
   588  007FCC  67                 	db	103	;'g'
   589  007FCD  65                 	db	101	;'e'
   590  007FCE  74                 	db	116	;'t'
   591  007FCF  20                 	db	32
   592  007FD0  76                 	db	118	;'v'
   593  007FD1  64                 	db	100	;'d'
   594  007FD2  64                 	db	100	;'d'
   595  007FD3  0D                 	db	13
   596  007FD4  0A                 	db	10
   597  007FD5  00                 	db	0
   598  007FD6                     STR_26:
   599  007FD6  6D                 	db	109	;'m'
   600  007FD7  61                 	db	97	;'a'
   601  007FD8  63                 	db	99	;'c'
   602  007FD9  20                 	db	32
   603  007FDA  67                 	db	103	;'g'
   604  007FDB  65                 	db	101	;'e'
   605  007FDC  74                 	db	116	;'t'
   606  007FDD  20                 	db	32
   607  007FDE  64                 	db	100	;'d'
   608  007FDF  72                 	db	114	;'r'
   609  007FE0  0D                 	db	13
   610  007FE1  0A                 	db	10
   611  007FE2  00                 	db	0
   612  007FE3                     STR_1:
   613  007FE3  73                 	db	115	;'s'
   614  007FE4  79                 	db	121	;'y'
   615  007FE5  73                 	db	115	;'s'
   616  007FE6  20                 	db	32
   617  007FE7  72                 	db	114	;'r'
   618  007FE8  65                 	db	101	;'e'
   619  007FE9  73                 	db	115	;'s'
   620  007FEA  65                 	db	101	;'e'
   621  007FEB  74                 	db	116	;'t'
   622  007FEC  0D                 	db	13
   623  007FED  0A                 	db	10
   624  007FEE  00                 	db	0
   625  007FEF                     STR_20:
   626  007FEF  6D                 	db	109	;'m'
   627  007FF0  61                 	db	97	;'a'
   628  007FF1  63                 	db	99	;'c'
   629  007FF2  20                 	db	32
   630  007FF3  73                 	db	115	;'s'
   631  007FF4  61                 	db	97	;'a'
   632  007FF5  76                 	db	118	;'v'
   633  007FF6  65                 	db	101	;'e'
   634  007FF7  0D                 	db	13
   635  007FF8  0A                 	db	10
   636  007FF9  00                 	db	0
   637  007FFA                     STR_3:
   638  007FFA  4F                 	db	79	;'O'
   639  007FFB  4B                 	db	75	;'K'
   640  007FFC  0D                 	db	13
   641  007FFD  0A                 	db	10
   642  007FFE  00                 	db	0
   643  007FFF  00                 	db	0	; dummy byte at the end
   644  0000                     
   645                           ; #config settings
   646                           
   647                           	psect	cinit
   648  0009C8                     __pcinit:
   649                           	callstack 0
   650  0009C8                     start_initialization:
   651                           	callstack 0
   652  0009C8                     __initialization:
   653                           	callstack 0
   654                           
   655                           ; Initialize objects allocated to BANK0 (36 bytes)
   656                           ; load TBLPTR registers with __pidataBANK0
   657  0009C8  0EF8               	movlw	low __pidataBANK0
   658  0009CA  6EF6               	movwf	tblptrl,c
   659  0009CC  0E0B               	movlw	high __pidataBANK0
   660  0009CE  6EF7               	movwf	tblptrh,c
   661  0009D0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   662  0009D2  6EF8               	movwf	tblptru,c
   663  0009D4  EE00  F0D7         	lfsr	0,__pdataBANK0
   664  0009D8  EE10 F024          	lfsr	1,36
   665  0009DC                     copy_data0:
   666  0009DC  0009               	tblrd		*+
   667  0009DE  CFF5 FFEE          	movff	tablat,postinc0
   668  0009E2  50E5               	movf	postdec1,w,c
   669  0009E4  50E1               	movf	fsr1l,w,c
   670  0009E6  E1FA               	bnz	copy_data0
   671                           
   672                           ; Clear objects allocated to BANK2 (62 bytes)
   673  0009E8  EE02  F000         	lfsr	0,__pbssBANK2
   674  0009EC  0E3E               	movlw	62
   675  0009EE                     clear_0:
   676  0009EE  6AEE               	clrf	postinc0,c
   677  0009F0  06E8               	decf	wreg,f,c
   678  0009F2  E1FD               	bnz	clear_0
   679                           
   680                           ; Clear objects allocated to BANK1 (204 bytes)
   681  0009F4  EE01  F000         	lfsr	0,__pbssBANK1
   682  0009F8  0ECC               	movlw	204
   683  0009FA                     clear_1:
   684  0009FA  6AEE               	clrf	postinc0,c
   685  0009FC  06E8               	decf	wreg,f,c
   686  0009FE  E1FD               	bnz	clear_1
   687                           
   688                           ; Clear objects allocated to COMRAM (17 bytes)
   689  000A00  EE00  F043         	lfsr	0,__pbssCOMRAM
   690  000A04  0E11               	movlw	17
   691  000A06                     clear_2:
   692  000A06  6AEE               	clrf	postinc0,c
   693  000A08  06E8               	decf	wreg,f,c
   694  000A0A  E1FD               	bnz	clear_2
   695  000A0C                     end_of_initialization:
   696                           	callstack 0
   697  000A0C                     __end_of__initialization:
   698                           	callstack 0
   699  000A0C  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   700  000A0E  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   701  000A10  0E00               	movlw	low (__Lmediumconst shr (0+16))
   702  000A12  6EF8               	movwf	tblptru,c
   703  000A14  0100               	movlb	0
   704  000A16  EF7E  F003         	goto	_main	;jump to C main() function
   705                           
   706                           	psect	bssCOMRAM
   707  000043                     __pbssCOMRAM:
   708                           	callstack 0
   709  000043                     _EUSART1_ErrorHandler:
   710                           	callstack 0
   711  000043                     	ds	2
   712  000045                     _EUSART1_OverrunErrorHandler:
   713                           	callstack 0
   714  000045                     	ds	2
   715  000047                     _EUSART1_FramingErrorHandler:
   716                           	callstack 0
   717  000047                     	ds	2
   718  000049                     _EUSART1_RxDefaultInterruptHandler:
   719                           	callstack 0
   720  000049                     	ds	2
   721  00004B                     _EUSART1_TxDefaultInterruptHandler:
   722                           	callstack 0
   723  00004B                     	ds	2
   724  00004D                     _eusart1RxLastError:
   725                           	callstack 0
   726  00004D                     	ds	1
   727  00004E                     _eusart1RxCount:
   728                           	callstack 0
   729  00004E                     	ds	1
   730  00004F                     _eusart1RxTail:
   731                           	callstack 0
   732  00004F                     	ds	1
   733  000050                     _eusart1RxHead:
   734                           	callstack 0
   735  000050                     	ds	1
   736  000051                     _eusart1TxBufferRemaining:
   737                           	callstack 0
   738  000051                     	ds	1
   739  000052                     _eusart1TxTail:
   740                           	callstack 0
   741  000052                     	ds	1
   742  000053                     _eusart1TxHead:
   743                           	callstack 0
   744  000053                     	ds	1
   745                           
   746                           	psect	dataBANK0
   747  0000D7                     __pdataBANK0:
   748                           	callstack 0
   749  0000D7                     config_RN2903@F4929:
   750                           	callstack 0
   751  0000D7                     	ds	16
   752  0000E7                     config_RN2903@F4927:
   753                           	callstack 0
   754  0000E7                     	ds	16
   755  0000F7                     config_RN2903@F4925:
   756                           	callstack 0
   757  0000F7                     	ds	4
   758                           
   759                           	psect	bssBANK1
   760  000100                     __pbssBANK1:
   761                           	callstack 0
   762  000100                     _eusart1RxStatusBuffer:
   763                           	callstack 0
   764  000100                     	ds	62
   765  00013E                     _eusart1TxBuffer:
   766                           	callstack 0
   767  00013E                     	ds	62
   768  00017C                     _tx_buf:
   769                           	callstack 0
   770  00017C                     	ds	80
   771                           
   772                           	psect	bssBANK2
   773  000200                     __pbssBANK2:
   774                           	callstack 0
   775  000200                     _eusart1RxBuffer:
   776                           	callstack 0
   777  000200                     	ds	62
   778                           
   779                           	psect	cstackBANK0
   780  000060                     __pcstackBANK0:
   781                           	callstack 0
   782  000060                     receive_RN2903@rx_data:
   783                           	callstack 0
   784                           
   785                           ; 80 bytes @ 0x0
   786  000060                     	ds	80
   787  0000B0                     receive_RN2903@count:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x50
   791  0000B0                     	ds	2
   792  0000B2                     config_RN2903@appskey:
   793                           	callstack 0
   794                           
   795                           ; 16 bytes @ 0x52
   796  0000B2                     	ds	16
   797  0000C2                     config_RN2903@nwkskey:
   798                           	callstack 0
   799                           
   800                           ; 16 bytes @ 0x62
   801  0000C2                     	ds	16
   802  0000D2                     config_RN2903@devaddr:
   803                           	callstack 0
   804                           
   805                           ; 4 bytes @ 0x72
   806  0000D2                     	ds	4
   807  0000D6                     config_RN2903@count:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x76
   811  0000D6                     	ds	1
   812                           
   813                           	psect	cstackCOMRAM
   814  000001                     __pcstackCOMRAM:
   815                           	callstack 0
   816  000001                     ??_INTERRUPT_InterruptManager:
   817  000001                     
   818                           ; 1 bytes @ 0x0
   819  000001                     	ds	4
   820  000005                     ??_isdigit:
   821  000005                     ?_strcmp:
   822                           	callstack 0
   823  000005                     ?___wmul:
   824                           	callstack 0
   825  000005                     ?___lwdiv:
   826                           	callstack 0
   827  000005                     EUSART1_Read@readValue:
   828                           	callstack 0
   829  000005                     EUSART1_Write@txData:
   830                           	callstack 0
   831  000005                     DELAY_milliseconds@milliseconds:
   832                           	callstack 0
   833  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   834                           	callstack 0
   835  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   836                           	callstack 0
   837  000005                     EUSART1_SetErrorHandler@interruptHandler:
   838                           	callstack 0
   839  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
   840                           	callstack 0
   841  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
   842                           	callstack 0
   843  000005                     ___wmul@multiplier:
   844                           	callstack 0
   845  000005                     ___lwdiv@dividend:
   846                           	callstack 0
   847  000005                     strcmp@s1:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x4
   851  000005                     	ds	1
   852  000006                     _isdigit$1287:
   853                           	callstack 0
   854  000006                     send_RN2903@data:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x5
   858  000006                     	ds	1
   859  000007                     ??_DELAY_milliseconds:
   860  000007                     isdigit@c:
   861                           	callstack 0
   862  000007                     ___wmul@multiplicand:
   863                           	callstack 0
   864  000007                     ___lwdiv@divisor:
   865                           	callstack 0
   866  000007                     strcmp@s2:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x6
   870  000007                     	ds	1
   871  000008                     ??_send_RN2903:
   872                           
   873                           ; 1 bytes @ 0x7
   874  000008                     	ds	1
   875  000009                     ??_strcmp:
   876  000009                     ___wmul@product:
   877                           	callstack 0
   878  000009                     ___lwdiv@quotient:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x8
   882  000009                     	ds	2
   883  00000B                     ___lwdiv@counter:
   884                           	callstack 0
   885  00000B                     strcmp@r:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0xA
   889  00000B                     	ds	1
   890  00000C                     ?___lwmod:
   891                           	callstack 0
   892  00000C                     send_RN2903@count:
   893                           	callstack 0
   894  00000C                     receive_RN2903@data:
   895                           	callstack 0
   896  00000C                     ___lwmod@dividend:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0xB
   900  00000C                     	ds	2
   901  00000E                     ??_receive_RN2903:
   902  00000E                     ___lwmod@divisor:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0xD
   906  00000E                     	ds	2
   907  000010                     ___lwmod@counter:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0xF
   911  000010                     	ds	1
   912  000011                     ?_sprintf:
   913                           	callstack 0
   914  000011                     sprintf@sp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x10
   918  000011                     	ds	2
   919  000013                     sprintf@f:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x12
   923  000013                     	ds	34
   924  000035                     ??_sprintf:
   925                           
   926                           ; 1 bytes @ 0x34
   927  000035                     	ds	4
   928  000039                     sprintf@idx:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x38
   932  000039                     	ds	1
   933  00003A                     sprintf@ap:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x39
   937  00003A                     	ds	2
   938  00003C                     sprintf@prec:
   939                           	callstack 0
   940                           
   941                           ; 1 bytes @ 0x3B
   942  00003C                     	ds	1
   943  00003D                     sprintf@val:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x3C
   947  00003D                     	ds	2
   948  00003F                     sprintf@flag:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x3E
   952  00003F                     	ds	1
   953  000040                     sprintf@width:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x3F
   957  000040                     	ds	2
   958  000042                     sprintf@c:
   959                           	callstack 0
   960                           
   961                           ; 1 bytes @ 0x41
   962  000042                     	ds	1
   963  000043                     
   964                           ; 1 bytes @ 0x42
   965 ;;
   966 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   967 ;;
   968 ;; *************** function _main *****************
   969 ;; Defined at:
   970 ;;		line 171 in file "main.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;		None
   973 ;; Auto vars:     Size  Location     Type
   974 ;;		None
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   984 ;;      Params:         0       0       0       0       0       0       0       0       0
   985 ;;      Locals:         0       0       0       0       0       0       0       0       0
   986 ;;      Temps:          0       0       0       0       0       0       0       0       0
   987 ;;      Totals:         0       0       0       0       0       0       0       0       0
   988 ;;Total ram usage:        0 bytes
   989 ;; Hardware stack levels required when called:    7
   990 ;; This function calls:
   991 ;;		_DELAY_milliseconds
   992 ;;		_SYSTEM_Initialize
   993 ;;		_config_RN2903
   994 ;;		_receive_RN2903
   995 ;;		_send_RN2903
   996 ;; This function is called by:
   997 ;;		Startup code after reset
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text0
  1002  0006FC                     __ptext0:
  1003                           	callstack 0
  1004  0006FC                     _main:
  1005                           	callstack 24
  1006                           
  1007                           ;main.c: 174: SYSTEM_Initialize();
  1008                           
  1009                           ;incstack = 0
  1010  0006FC  EC4A  F006         	call	_SYSTEM_Initialize	;wreg free
  1011                           
  1012                           ;main.c: 181: (INTCONbits.GIE = 1);
  1013  000700  8EF2               	bsf	242,7,c	;volatile
  1014                           
  1015                           ;main.c: 187: (INTCONbits.PEIE = 1);
  1016  000702  8CF2               	bsf	242,6,c	;volatile
  1017                           
  1018                           ;main.c: 191: DELAY_milliseconds(2000);
  1019  000704  0E07               	movlw	7
  1020  000706  6E06               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1021  000708  0ED0               	movlw	208
  1022  00070A  6E05               	movwf	DELAY_milliseconds@milliseconds^0,c
  1023  00070C  EC0E  F006         	call	_DELAY_milliseconds	;wreg free
  1024                           
  1025                           ;main.c: 192: config_RN2903();
  1026  000710  ECDD  F001         	call	_config_RN2903	;wreg free
  1027  000714                     l2202:
  1028                           
  1029                           ;main.c: 195: {;main.c: 196: send_RN2903 ("mac get dr\r\n");
  1030  000714  0ED6               	movlw	low STR_26
  1031  000716  6E06               	movwf	send_RN2903@data^0,c
  1032  000718  0E7F               	movlw	high STR_26
  1033  00071A  6E07               	movwf	(send_RN2903@data+1)^0,c
  1034  00071C  EC69  F004         	call	_send_RN2903	;wreg free
  1035                           
  1036                           ;main.c: 197: receive_RN2903("OK\r\n");
  1037  000720  0EFA               	movlw	low STR_3
  1038  000722  6E0C               	movwf	receive_RN2903@data^0,c
  1039  000724  0E7F               	movlw	high STR_3
  1040  000726  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1041  000728  EC22  F004         	call	_receive_RN2903	;wreg free
  1042                           
  1043                           ;main.c: 198: DELAY_milliseconds(200);
  1044  00072C  0E00               	movlw	0
  1045  00072E  6E06               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1046  000730  0EC8               	movlw	200
  1047  000732  6E05               	movwf	DELAY_milliseconds@milliseconds^0,c
  1048  000734  EC0E  F006         	call	_DELAY_milliseconds	;wreg free
  1049                           
  1050                           ;main.c: 199: send_RN2903 ("radio get freq\r\n");
  1051  000738  0E99               	movlw	low STR_28
  1052  00073A  6E06               	movwf	send_RN2903@data^0,c
  1053  00073C  0E7F               	movlw	high STR_28
  1054  00073E  6E07               	movwf	(send_RN2903@data+1)^0,c
  1055  000740  EC69  F004         	call	_send_RN2903	;wreg free
  1056                           
  1057                           ;main.c: 200: receive_RN2903("OK\r\n");
  1058  000744  0EFA               	movlw	low STR_3
  1059  000746  6E0C               	movwf	receive_RN2903@data^0,c
  1060  000748  0E7F               	movlw	high STR_3
  1061  00074A  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1062  00074C  EC22  F004         	call	_receive_RN2903	;wreg free
  1063                           
  1064                           ;main.c: 201: DELAY_milliseconds(200);
  1065  000750  0E00               	movlw	0
  1066  000752  6E06               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1067  000754  0EC8               	movlw	200
  1068  000756  6E05               	movwf	DELAY_milliseconds@milliseconds^0,c
  1069  000758  EC0E  F006         	call	_DELAY_milliseconds	;wreg free
  1070                           
  1071                           ;main.c: 202: send_RN2903 ("mac set dr 2\r\n");
  1072  00075C  0EAA               	movlw	low STR_18
  1073  00075E  6E06               	movwf	send_RN2903@data^0,c
  1074  000760  0E7F               	movlw	high STR_18
  1075  000762  6E07               	movwf	(send_RN2903@data+1)^0,c
  1076  000764  EC69  F004         	call	_send_RN2903	;wreg free
  1077                           
  1078                           ;main.c: 203: receive_RN2903("OK\r\n");
  1079  000768  0EFA               	movlw	low STR_3
  1080  00076A  6E0C               	movwf	receive_RN2903@data^0,c
  1081  00076C  0E7F               	movlw	high STR_3
  1082  00076E  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1083  000770  EC22  F004         	call	_receive_RN2903	;wreg free
  1084                           
  1085                           ;main.c: 204: DELAY_milliseconds(1000);
  1086  000774  0E03               	movlw	3
  1087  000776  6E06               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1088  000778  0EE8               	movlw	232
  1089  00077A  6E05               	movwf	DELAY_milliseconds@milliseconds^0,c
  1090  00077C  EC0E  F006         	call	_DELAY_milliseconds	;wreg free
  1091                           
  1092                           ;main.c: 216: send_RN2903 ("mac tx uncnf 1 33353536\r\n");
  1093  000780  0E2D               	movlw	low STR_32
  1094  000782  6E06               	movwf	send_RN2903@data^0,c
  1095  000784  0E7F               	movlw	high STR_32
  1096  000786  6E07               	movwf	(send_RN2903@data+1)^0,c
  1097  000788  EC69  F004         	call	_send_RN2903	;wreg free
  1098                           
  1099                           ;main.c: 217: if (receive_RN2903("OK\r\n"))while(1);
  1100  00078C  0EFA               	movlw	low STR_3
  1101  00078E  6E0C               	movwf	receive_RN2903@data^0,c
  1102  000790  0E7F               	movlw	high STR_3
  1103  000792  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1104  000794  EC22  F004         	call	_receive_RN2903	;wreg free
  1105  000798  0900               	iorlw	0
  1106  00079A  A4D8               	btfss	status,2,c
  1107  00079C                     u1450:
  1108  00079C  D7FF               	goto	u1450
  1109                           
  1110                           ;main.c: 218: DELAY_milliseconds(10000);
  1111  00079E  0E27               	movlw	39
  1112  0007A0  6E06               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1113  0007A2  0E10               	movlw	16
  1114  0007A4  6E05               	movwf	DELAY_milliseconds@milliseconds^0,c
  1115  0007A6  EC0E  F006         	call	_DELAY_milliseconds	;wreg free
  1116  0007AA  D7B4               	goto	l2202
  1117  0007AC                     __end_of_main:
  1118                           	callstack 0
  1119                           
  1120 ;; *************** function _config_RN2903 *****************
  1121 ;; Defined at:
  1122 ;;		line 85 in file "main.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  count           1  118[BANK0 ] unsigned char 
  1127 ;;  nwkskey        16   98[BANK0 ] unsigned char [16]
  1128 ;;  appskey        16   82[BANK0 ] unsigned char [16]
  1129 ;;  devaddr         4  114[BANK0 ] unsigned char [4]
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1139 ;;      Params:         0       0       0       0       0       0       0       0       0
  1140 ;;      Locals:         0      37       0       0       0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1142 ;;      Totals:         0      37       0       0       0       0       0       0       0
  1143 ;;Total ram usage:       37 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    6
  1146 ;; This function calls:
  1147 ;;		_DELAY_milliseconds
  1148 ;;		_receive_RN2903
  1149 ;;		_send_RN2903
  1150 ;;		_sprintf
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text1
  1157  0003BA                     __ptext1:
  1158                           	callstack 0
  1159  0003BA                     _config_RN2903:
  1160                           	callstack 24
  1161                           
  1162                           ;main.c: 91: DELAY_milliseconds(100);
  1163                           
  1164                           ;incstack = 0
  1165  0003BA  0E00               	movlw	0
  1166  0003BC  6E06               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1167  0003BE  0E64               	movlw	100
  1168  0003C0  6E05               	movwf	DELAY_milliseconds@milliseconds^0,c
  1169  0003C2  EC0E  F006         	call	_DELAY_milliseconds	;wreg free
  1170                           
  1171                           ;main.c: 92: send_RN2903 ("sys reset\r\n");
  1172  0003C6  0EE3               	movlw	low STR_1
  1173  0003C8  6E06               	movwf	send_RN2903@data^0,c
  1174  0003CA  0E7F               	movlw	high STR_1
  1175  0003CC  6E07               	movwf	(send_RN2903@data+1)^0,c
  1176  0003CE  EC69  F004         	call	_send_RN2903	;wreg free
  1177                           
  1178                           ;main.c: 93: DELAY_milliseconds(1000);
  1179  0003D2  0E03               	movlw	3
  1180  0003D4  6E06               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1181  0003D6  0EE8               	movlw	232
  1182  0003D8  6E05               	movwf	DELAY_milliseconds@milliseconds^0,c
  1183  0003DA  EC0E  F006         	call	_DELAY_milliseconds	;wreg free
  1184                           
  1185                           ;main.c: 94: send_RN2903 ("sys get vdd\r\n");
  1186  0003DE  0EC8               	movlw	low STR_2
  1187  0003E0  6E06               	movwf	send_RN2903@data^0,c
  1188  0003E2  0E7F               	movlw	high STR_2
  1189  0003E4  6E07               	movwf	(send_RN2903@data+1)^0,c
  1190  0003E6  EC69  F004         	call	_send_RN2903	;wreg free
  1191                           
  1192                           ;main.c: 95: receive_RN2903("OK\r\n");
  1193  0003EA  0EFA               	movlw	low STR_3
  1194  0003EC  6E0C               	movwf	receive_RN2903@data^0,c
  1195  0003EE  0E7F               	movlw	high STR_3
  1196  0003F0  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1197  0003F2  EC22  F004         	call	_receive_RN2903	;wreg free
  1198                           
  1199                           ;main.c: 96: send_RN2903 ("mac set ch status 0 on\r\n");
  1200  0003F6  0E47               	movlw	low STR_4
  1201  0003F8  6E06               	movwf	send_RN2903@data^0,c
  1202  0003FA  0E7F               	movlw	high STR_4
  1203  0003FC  6E07               	movwf	(send_RN2903@data+1)^0,c
  1204  0003FE  EC69  F004         	call	_send_RN2903	;wreg free
  1205                           
  1206                           ;main.c: 97: if (receive_RN2903("OK\r\n"))while(1);
  1207  000402  0EFA               	movlw	low STR_3
  1208  000404  6E0C               	movwf	receive_RN2903@data^0,c
  1209  000406  0E7F               	movlw	high STR_3
  1210  000408  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1211  00040A  EC22  F004         	call	_receive_RN2903	;wreg free
  1212  00040E  0900               	iorlw	0
  1213  000410  A4D8               	btfss	status,2,c
  1214  000412                     u1260:
  1215  000412  D7FF               	goto	u1260
  1216                           
  1217                           ;main.c: 98: for (uint8_t count = 1; count <=71;count++)
  1218  000414  0E01               	movlw	1
  1219  000416  0100               	movlb	0	; () banked
  1220  000418  6FD6               	movwf	config_RN2903@count& (0+255),b
  1221  00041A                     l2114:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;main.c: 99: {;main.c: 100: sprintf (tx_buf,"mac set ch status %d off\r\n",count);
  1225  00041A  0E7C               	movlw	low _tx_buf
  1226  00041C  6E11               	movwf	sprintf@sp^0,c
  1227  00041E  0E01               	movlw	high _tx_buf
  1228  000420  6E12               	movwf	(sprintf@sp+1)^0,c
  1229  000422  0E12               	movlw	low STR_6
  1230  000424  6E13               	movwf	sprintf@f^0,c
  1231  000426  0E7F               	movlw	high STR_6
  1232  000428  6E14               	movwf	(sprintf@f+1)^0,c
  1233  00042A  C0D6  F015         	movff	config_RN2903@count,?_sprintf+4
  1234  00042E  6A16               	clrf	(?_sprintf+5)^0,c
  1235  000430  EC35  F000         	call	_sprintf	;wreg free
  1236                           
  1237                           ;main.c: 101: send_RN2903 (tx_buf);
  1238  000434  0E7C               	movlw	low _tx_buf
  1239  000436  6E06               	movwf	send_RN2903@data^0,c
  1240  000438  0E01               	movlw	high _tx_buf
  1241  00043A  6E07               	movwf	(send_RN2903@data+1)^0,c
  1242  00043C  EC69  F004         	call	_send_RN2903	;wreg free
  1243                           
  1244                           ;main.c: 102: receive_RN2903("OK\r\n");
  1245  000440  0EFA               	movlw	low STR_3
  1246  000442  6E0C               	movwf	receive_RN2903@data^0,c
  1247  000444  0E7F               	movlw	high STR_3
  1248  000446  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1249  000448  EC22  F004         	call	_receive_RN2903	;wreg free
  1250  00044C  0100               	movlb	0	; () banked
  1251  00044E  2BD6               	incf	config_RN2903@count& (0+255),f,b
  1252                           
  1253                           ; BSR set to: 0
  1254  000450  0E47               	movlw	71
  1255  000452  65D6               	cpfsgt	config_RN2903@count& (0+255),b
  1256  000454  D7E2               	goto	l2114
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;main.c: 103: };main.c: 107: sprintf (tx_buf,"mac set adr off\r\n");
  1260  000456  0E7C               	movlw	low _tx_buf
  1261  000458  6E11               	movwf	sprintf@sp^0,c
  1262  00045A  0E01               	movlw	high _tx_buf
  1263  00045C  6E12               	movwf	(sprintf@sp+1)^0,c
  1264  00045E  0E76               	movlw	low STR_8
  1265  000460  6E13               	movwf	sprintf@f^0,c
  1266  000462  0E7F               	movlw	high STR_8
  1267  000464  6E14               	movwf	(sprintf@f+1)^0,c
  1268  000466  EC35  F000         	call	_sprintf	;wreg free
  1269                           
  1270                           ;main.c: 108: send_RN2903 (tx_buf);
  1271  00046A  0E7C               	movlw	low _tx_buf
  1272  00046C  6E06               	movwf	send_RN2903@data^0,c
  1273  00046E  0E01               	movlw	high _tx_buf
  1274  000470  6E07               	movwf	(send_RN2903@data+1)^0,c
  1275  000472  EC69  F004         	call	_send_RN2903	;wreg free
  1276                           
  1277                           ;main.c: 109: if (receive_RN2903("OK\r\n"))while(1);
  1278  000476  0EFA               	movlw	low STR_3
  1279  000478  6E0C               	movwf	receive_RN2903@data^0,c
  1280  00047A  0E7F               	movlw	high STR_3
  1281  00047C  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1282  00047E  EC22  F004         	call	_receive_RN2903	;wreg free
  1283  000482  0900               	iorlw	0
  1284  000484  A4D8               	btfss	status,2,c
  1285  000486                     u1280:
  1286  000486  D7FF               	goto	u1280
  1287                           
  1288                           ;main.c: 112: sprintf (tx_buf,"mac set rxdelay1 %d\r\n",5000);
  1289  000488  0E7C               	movlw	low _tx_buf
  1290  00048A  6E11               	movwf	sprintf@sp^0,c
  1291  00048C  0E01               	movlw	high _tx_buf
  1292  00048E  6E12               	movwf	(sprintf@sp+1)^0,c
  1293  000490  0E60               	movlw	low STR_10
  1294  000492  6E13               	movwf	sprintf@f^0,c
  1295  000494  0E7F               	movlw	high STR_10
  1296  000496  6E14               	movwf	(sprintf@f+1)^0,c
  1297  000498  0E13               	movlw	19
  1298  00049A  6E16               	movwf	(?_sprintf+5)^0,c
  1299  00049C  0E88               	movlw	136
  1300  00049E  6E15               	movwf	(?_sprintf+4)^0,c
  1301  0004A0  EC35  F000         	call	_sprintf	;wreg free
  1302                           
  1303                           ;main.c: 113: send_RN2903 (tx_buf);
  1304  0004A4  0E7C               	movlw	low _tx_buf
  1305  0004A6  6E06               	movwf	send_RN2903@data^0,c
  1306  0004A8  0E01               	movlw	high _tx_buf
  1307  0004AA  6E07               	movwf	(send_RN2903@data+1)^0,c
  1308  0004AC  EC69  F004         	call	_send_RN2903	;wreg free
  1309                           
  1310                           ;main.c: 114: if (receive_RN2903("OK\r\n"))while(1);
  1311  0004B0  0EFA               	movlw	low STR_3
  1312  0004B2  6E0C               	movwf	receive_RN2903@data^0,c
  1313  0004B4  0E7F               	movlw	high STR_3
  1314  0004B6  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1315  0004B8  EC22  F004         	call	_receive_RN2903	;wreg free
  1316  0004BC  0900               	iorlw	0
  1317  0004BE  A4D8               	btfss	status,2,c
  1318  0004C0                     u1290:
  1319  0004C0  D7FF               	goto	u1290
  1320                           
  1321                           ;main.c: 117: uint8_t devaddr[4] = {0x27, 0x00, 0x00, 0x46};
  1322  0004C2  C0F7  F0D2         	movff	config_RN2903@F4925,config_RN2903@devaddr
  1323  0004C6  C0F8  F0D3         	movff	config_RN2903@F4925+1,config_RN2903@devaddr+1
  1324  0004CA  C0F9  F0D4         	movff	config_RN2903@F4925+2,config_RN2903@devaddr+2
  1325  0004CE  C0FA  F0D5         	movff	config_RN2903@F4925+3,config_RN2903@devaddr+3
  1326                           
  1327                           ;main.c: 118: uint8_t appskey[16] = {0xef, 0xfe, 0x1d, 0xad, 0x76, 0xa5, 0x81, 0x26, 0xa
      +                          0, 0x59, 0xf5, 0x9c, 0xa4, 0xfc, 0x74, 0x9a};
  1328  0004D2  EE20  F0E7         	lfsr	2,config_RN2903@F4927
  1329  0004D6  EE10  F0B2         	lfsr	1,config_RN2903@appskey
  1330  0004DA  0E0F               	movlw	15
  1331  0004DC                     u1301:
  1332  0004DC  CFDB FFE3          	movff	plusw2,plusw1
  1333  0004E0  06E8               	decf	wreg,f,c
  1334  0004E2  E2FC               	bc	u1301
  1335                           
  1336                           ;main.c: 119: uint8_t nwkskey[16] = {0xfc, 0xe1, 0x1e, 0xaa, 0x49, 0x0f, 0xfb, 0xf5, 0x1
      +                          9, 0xd4, 0xe2, 0xe5, 0x8f, 0x81, 0xdd, 0x85};
  1337  0004E4  EE20  F0D7         	lfsr	2,config_RN2903@F4929
  1338  0004E8  EE10  F0C2         	lfsr	1,config_RN2903@nwkskey
  1339  0004EC  0E0F               	movlw	15
  1340  0004EE                     u1311:
  1341  0004EE  CFDB FFE3          	movff	plusw2,plusw1
  1342  0004F2  06E8               	decf	wreg,f,c
  1343  0004F4  E2FC               	bc	u1311
  1344                           
  1345                           ;main.c: 121: sprintf (tx_buf,"mac set devaddr %02x%02x%02x%02x\r\n",devaddr[0],devaddr[
      +                          1],devaddr[2],devaddr[3]);
  1346  0004F6  0E7C               	movlw	low _tx_buf
  1347  0004F8  6E11               	movwf	sprintf@sp^0,c
  1348  0004FA  0E01               	movlw	high _tx_buf
  1349  0004FC  6E12               	movwf	(sprintf@sp+1)^0,c
  1350  0004FE  0EEF               	movlw	low STR_12
  1351  000500  6E13               	movwf	sprintf@f^0,c
  1352  000502  0E7E               	movlw	high STR_12
  1353  000504  6E14               	movwf	(sprintf@f+1)^0,c
  1354  000506  C0D2  F015         	movff	config_RN2903@devaddr,?_sprintf+4
  1355  00050A  6A16               	clrf	(?_sprintf+5)^0,c
  1356  00050C  C0D3  F017         	movff	config_RN2903@devaddr+1,?_sprintf+6
  1357  000510  6A18               	clrf	(?_sprintf+7)^0,c
  1358  000512  C0D4  F019         	movff	config_RN2903@devaddr+2,?_sprintf+8
  1359  000516  6A1A               	clrf	(?_sprintf+9)^0,c
  1360  000518  C0D5  F01B         	movff	config_RN2903@devaddr+3,?_sprintf+10
  1361  00051C  6A1C               	clrf	(?_sprintf+11)^0,c
  1362  00051E  EC35  F000         	call	_sprintf	;wreg free
  1363                           
  1364                           ;main.c: 122: send_RN2903 (tx_buf);
  1365  000522  0E7C               	movlw	low _tx_buf
  1366  000524  6E06               	movwf	send_RN2903@data^0,c
  1367  000526  0E01               	movlw	high _tx_buf
  1368  000528  6E07               	movwf	(send_RN2903@data+1)^0,c
  1369  00052A  EC69  F004         	call	_send_RN2903	;wreg free
  1370                           
  1371                           ;main.c: 123: if (receive_RN2903("OK\r\n"))while(1);
  1372  00052E  0EFA               	movlw	low STR_3
  1373  000530  6E0C               	movwf	receive_RN2903@data^0,c
  1374  000532  0E7F               	movlw	high STR_3
  1375  000534  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1376  000536  EC22  F004         	call	_receive_RN2903	;wreg free
  1377  00053A  0900               	iorlw	0
  1378  00053C  A4D8               	btfss	status,2,c
  1379  00053E                     u1320:
  1380  00053E  D7FF               	goto	u1320
  1381                           
  1382                           ;main.c: 124: sprintf (tx_buf,"mac set appskey %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%
      +                          02x%02x%02x%02x%02x%02x\r\n",appskey[0],appskey[1],appskey[2],appskey[3],appskey[4],apps
      +                          key[5],appskey[6],appskey[7],appskey[8],appskey[9],appskey[10],appskey[11],appskey[12],a
  1383  000540  0E7C               	movlw	low _tx_buf
  1384  000542  6E11               	movwf	sprintf@sp^0,c
  1385  000544  0E01               	movlw	high _tx_buf
  1386  000546  6E12               	movwf	(sprintf@sp+1)^0,c
  1387  000548  0E9C               	movlw	low STR_14
  1388  00054A  6E13               	movwf	sprintf@f^0,c
  1389  00054C  0E7E               	movlw	high STR_14
  1390  00054E  6E14               	movwf	(sprintf@f+1)^0,c
  1391  000550  C0B2  F015         	movff	config_RN2903@appskey,?_sprintf+4
  1392  000554  6A16               	clrf	(?_sprintf+5)^0,c
  1393  000556  C0B3  F017         	movff	config_RN2903@appskey+1,?_sprintf+6
  1394  00055A  6A18               	clrf	(?_sprintf+7)^0,c
  1395  00055C  C0B4  F019         	movff	config_RN2903@appskey+2,?_sprintf+8
  1396  000560  6A1A               	clrf	(?_sprintf+9)^0,c
  1397  000562  C0B5  F01B         	movff	config_RN2903@appskey+3,?_sprintf+10
  1398  000566  6A1C               	clrf	(?_sprintf+11)^0,c
  1399  000568  C0B6  F01D         	movff	config_RN2903@appskey+4,?_sprintf+12
  1400  00056C  6A1E               	clrf	(?_sprintf+13)^0,c
  1401  00056E  C0B7  F01F         	movff	config_RN2903@appskey+5,?_sprintf+14
  1402  000572  6A20               	clrf	(?_sprintf+15)^0,c
  1403  000574  C0B8  F021         	movff	config_RN2903@appskey+6,?_sprintf+16
  1404  000578  6A22               	clrf	(?_sprintf+17)^0,c
  1405  00057A  C0B9  F023         	movff	config_RN2903@appskey+7,?_sprintf+18
  1406  00057E  6A24               	clrf	(?_sprintf+19)^0,c
  1407  000580  C0BA  F025         	movff	config_RN2903@appskey+8,?_sprintf+20
  1408  000584  6A26               	clrf	(?_sprintf+21)^0,c
  1409  000586  C0BB  F027         	movff	config_RN2903@appskey+9,?_sprintf+22
  1410  00058A  6A28               	clrf	(?_sprintf+23)^0,c
  1411  00058C  C0BC  F029         	movff	config_RN2903@appskey+10,?_sprintf+24
  1412  000590  6A2A               	clrf	(?_sprintf+25)^0,c
  1413  000592  C0BD  F02B         	movff	config_RN2903@appskey+11,?_sprintf+26
  1414  000596  6A2C               	clrf	(?_sprintf+27)^0,c
  1415  000598  C0BE  F02D         	movff	config_RN2903@appskey+12,?_sprintf+28
  1416  00059C  6A2E               	clrf	(?_sprintf+29)^0,c
  1417  00059E  C0BF  F02F         	movff	config_RN2903@appskey+13,?_sprintf+30
  1418  0005A2  6A30               	clrf	(?_sprintf+31)^0,c
  1419  0005A4  C0C0  F031         	movff	config_RN2903@appskey+14,?_sprintf+32
  1420  0005A8  6A32               	clrf	(?_sprintf+33)^0,c
  1421  0005AA  C0C1  F033         	movff	config_RN2903@appskey+15,?_sprintf+34
  1422  0005AE  6A34               	clrf	(?_sprintf+35)^0,c
  1423  0005B0  EC35  F000         	call	_sprintf	;wreg free
  1424                           
  1425                           ;main.c: 125: send_RN2903 (tx_buf);
  1426  0005B4  0E7C               	movlw	low _tx_buf
  1427  0005B6  6E06               	movwf	send_RN2903@data^0,c
  1428  0005B8  0E01               	movlw	high _tx_buf
  1429  0005BA  6E07               	movwf	(send_RN2903@data+1)^0,c
  1430  0005BC  EC69  F004         	call	_send_RN2903	;wreg free
  1431                           
  1432                           ;main.c: 126: if (receive_RN2903("OK\r\n"))while(1);
  1433  0005C0  0EFA               	movlw	low STR_3
  1434  0005C2  6E0C               	movwf	receive_RN2903@data^0,c
  1435  0005C4  0E7F               	movlw	high STR_3
  1436  0005C6  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1437  0005C8  EC22  F004         	call	_receive_RN2903	;wreg free
  1438  0005CC  0900               	iorlw	0
  1439  0005CE  A4D8               	btfss	status,2,c
  1440  0005D0                     u1330:
  1441  0005D0  D7FF               	goto	u1330
  1442                           
  1443                           ;main.c: 127: sprintf (tx_buf,"mac set nwkskey %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%
      +                          02x%02x%02x%02x%02x%02x\r\n",nwkskey[0],nwkskey[1],nwkskey[2],nwkskey[3],nwkskey[4],nwks
      +                          key[5],nwkskey[6],nwkskey[7],nwkskey[8],nwkskey[9],nwkskey[10],nwkskey[11],nwkskey[12],n
  1444  0005D2  0E7C               	movlw	low _tx_buf
  1445  0005D4  6E11               	movwf	sprintf@sp^0,c
  1446  0005D6  0E01               	movlw	high _tx_buf
  1447  0005D8  6E12               	movwf	(sprintf@sp+1)^0,c
  1448  0005DA  0E49               	movlw	low STR_16
  1449  0005DC  6E13               	movwf	sprintf@f^0,c
  1450  0005DE  0E7E               	movlw	high STR_16
  1451  0005E0  6E14               	movwf	(sprintf@f+1)^0,c
  1452  0005E2  C0C2  F015         	movff	config_RN2903@nwkskey,?_sprintf+4
  1453  0005E6  6A16               	clrf	(?_sprintf+5)^0,c
  1454  0005E8  C0C3  F017         	movff	config_RN2903@nwkskey+1,?_sprintf+6
  1455  0005EC  6A18               	clrf	(?_sprintf+7)^0,c
  1456  0005EE  C0C4  F019         	movff	config_RN2903@nwkskey+2,?_sprintf+8
  1457  0005F2  6A1A               	clrf	(?_sprintf+9)^0,c
  1458  0005F4  C0C5  F01B         	movff	config_RN2903@nwkskey+3,?_sprintf+10
  1459  0005F8  6A1C               	clrf	(?_sprintf+11)^0,c
  1460  0005FA  C0C6  F01D         	movff	config_RN2903@nwkskey+4,?_sprintf+12
  1461  0005FE  6A1E               	clrf	(?_sprintf+13)^0,c
  1462  000600  C0C7  F01F         	movff	config_RN2903@nwkskey+5,?_sprintf+14
  1463  000604  6A20               	clrf	(?_sprintf+15)^0,c
  1464  000606  C0C8  F021         	movff	config_RN2903@nwkskey+6,?_sprintf+16
  1465  00060A  6A22               	clrf	(?_sprintf+17)^0,c
  1466  00060C  C0C9  F023         	movff	config_RN2903@nwkskey+7,?_sprintf+18
  1467  000610  6A24               	clrf	(?_sprintf+19)^0,c
  1468  000612  C0CA  F025         	movff	config_RN2903@nwkskey+8,?_sprintf+20
  1469  000616  6A26               	clrf	(?_sprintf+21)^0,c
  1470  000618  C0CB  F027         	movff	config_RN2903@nwkskey+9,?_sprintf+22
  1471  00061C  6A28               	clrf	(?_sprintf+23)^0,c
  1472  00061E  C0CC  F029         	movff	config_RN2903@nwkskey+10,?_sprintf+24
  1473  000622  6A2A               	clrf	(?_sprintf+25)^0,c
  1474  000624  C0CD  F02B         	movff	config_RN2903@nwkskey+11,?_sprintf+26
  1475  000628  6A2C               	clrf	(?_sprintf+27)^0,c
  1476  00062A  C0CE  F02D         	movff	config_RN2903@nwkskey+12,?_sprintf+28
  1477  00062E  6A2E               	clrf	(?_sprintf+29)^0,c
  1478  000630  C0CF  F02F         	movff	config_RN2903@nwkskey+13,?_sprintf+30
  1479  000634  6A30               	clrf	(?_sprintf+31)^0,c
  1480  000636  C0D0  F031         	movff	config_RN2903@nwkskey+14,?_sprintf+32
  1481  00063A  6A32               	clrf	(?_sprintf+33)^0,c
  1482  00063C  C0D1  F033         	movff	config_RN2903@nwkskey+15,?_sprintf+34
  1483  000640  6A34               	clrf	(?_sprintf+35)^0,c
  1484  000642  EC35  F000         	call	_sprintf	;wreg free
  1485                           
  1486                           ;main.c: 128: send_RN2903 (tx_buf);
  1487  000646  0E7C               	movlw	low _tx_buf
  1488  000648  6E06               	movwf	send_RN2903@data^0,c
  1489  00064A  0E01               	movlw	high _tx_buf
  1490  00064C  6E07               	movwf	(send_RN2903@data+1)^0,c
  1491  00064E  EC69  F004         	call	_send_RN2903	;wreg free
  1492                           
  1493                           ;main.c: 129: if (receive_RN2903("OK\r\n"))while(1);
  1494  000652  0EFA               	movlw	low STR_3
  1495  000654  6E0C               	movwf	receive_RN2903@data^0,c
  1496  000656  0E7F               	movlw	high STR_3
  1497  000658  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1498  00065A  EC22  F004         	call	_receive_RN2903	;wreg free
  1499  00065E  0900               	iorlw	0
  1500  000660  A4D8               	btfss	status,2,c
  1501  000662                     u1340:
  1502  000662  D7FF               	goto	u1340
  1503                           
  1504                           ;main.c: 148: send_RN2903 ("mac set dr 2\r\n");
  1505  000664  0EAA               	movlw	low STR_18
  1506  000666  6E06               	movwf	send_RN2903@data^0,c
  1507  000668  0E7F               	movlw	high STR_18
  1508  00066A  6E07               	movwf	(send_RN2903@data+1)^0,c
  1509  00066C  EC69  F004         	call	_send_RN2903	;wreg free
  1510                           
  1511                           ;main.c: 149: if (receive_RN2903("OK\r\n"))while(1);
  1512  000670  0EFA               	movlw	low STR_3
  1513  000672  6E0C               	movwf	receive_RN2903@data^0,c
  1514  000674  0E7F               	movlw	high STR_3
  1515  000676  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1516  000678  EC22  F004         	call	_receive_RN2903	;wreg free
  1517  00067C  0900               	iorlw	0
  1518  00067E  A4D8               	btfss	status,2,c
  1519  000680                     u1350:
  1520  000680  D7FF               	goto	u1350
  1521                           
  1522                           ;main.c: 150: send_RN2903 ("mac save\r\n");
  1523  000682  0EEF               	movlw	low STR_20
  1524  000684  6E06               	movwf	send_RN2903@data^0,c
  1525  000686  0E7F               	movlw	high STR_20
  1526  000688  6E07               	movwf	(send_RN2903@data+1)^0,c
  1527  00068A  EC69  F004         	call	_send_RN2903	;wreg free
  1528                           
  1529                           ;main.c: 151: if (receive_RN2903("OK\r\n"))while(1);
  1530  00068E  0EFA               	movlw	low STR_3
  1531  000690  6E0C               	movwf	receive_RN2903@data^0,c
  1532  000692  0E7F               	movlw	high STR_3
  1533  000694  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1534  000696  EC22  F004         	call	_receive_RN2903	;wreg free
  1535  00069A  0900               	iorlw	0
  1536  00069C  A4D8               	btfss	status,2,c
  1537  00069E                     u1360:
  1538  00069E  D7FF               	goto	u1360
  1539                           
  1540                           ;main.c: 152: DELAY_milliseconds(1000);
  1541  0006A0  0E03               	movlw	3
  1542  0006A2  6E06               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1543  0006A4  0EE8               	movlw	232
  1544  0006A6  6E05               	movwf	DELAY_milliseconds@milliseconds^0,c
  1545  0006A8  EC0E  F006         	call	_DELAY_milliseconds	;wreg free
  1546                           
  1547                           ;main.c: 153: send_RN2903 ("sys get vdd\r\n");
  1548  0006AC  0EC8               	movlw	low STR_2
  1549  0006AE  6E06               	movwf	send_RN2903@data^0,c
  1550  0006B0  0E7F               	movlw	high STR_2
  1551  0006B2  6E07               	movwf	(send_RN2903@data+1)^0,c
  1552  0006B4  EC69  F004         	call	_send_RN2903	;wreg free
  1553                           
  1554                           ;main.c: 154: receive_RN2903("OK\r\n");
  1555  0006B8  0EFA               	movlw	low STR_3
  1556  0006BA  6E0C               	movwf	receive_RN2903@data^0,c
  1557  0006BC  0E7F               	movlw	high STR_3
  1558  0006BE  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1559  0006C0  EC22  F004         	call	_receive_RN2903	;wreg free
  1560                           
  1561                           ;main.c: 155: DELAY_milliseconds(1000);
  1562  0006C4  0E03               	movlw	3
  1563  0006C6  6E06               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1564  0006C8  0EE8               	movlw	232
  1565  0006CA  6E05               	movwf	DELAY_milliseconds@milliseconds^0,c
  1566  0006CC  EC0E  F006         	call	_DELAY_milliseconds	;wreg free
  1567                           
  1568                           ;main.c: 157: send_RN2903 ("mac join abp\r\n");
  1569  0006D0  0EB9               	movlw	low STR_24
  1570  0006D2  6E06               	movwf	send_RN2903@data^0,c
  1571  0006D4  0E7F               	movlw	high STR_24
  1572  0006D6  6E07               	movwf	(send_RN2903@data+1)^0,c
  1573  0006D8  EC69  F004         	call	_send_RN2903	;wreg free
  1574                           
  1575                           ;main.c: 158: if (receive_RN2903("OK\r\n"))while(1);
  1576  0006DC  0EFA               	movlw	low STR_3
  1577  0006DE  6E0C               	movwf	receive_RN2903@data^0,c
  1578  0006E0  0E7F               	movlw	high STR_3
  1579  0006E2  6E0D               	movwf	(receive_RN2903@data+1)^0,c
  1580  0006E4  EC22  F004         	call	_receive_RN2903	;wreg free
  1581  0006E8  0900               	iorlw	0
  1582  0006EA  A4D8               	btfss	status,2,c
  1583  0006EC                     u1370:
  1584  0006EC  D7FF               	goto	u1370
  1585                           
  1586                           ;main.c: 165: DELAY_milliseconds(10000);
  1587  0006EE  0E27               	movlw	39
  1588  0006F0  6E06               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1589  0006F2  0E10               	movlw	16
  1590  0006F4  6E05               	movwf	DELAY_milliseconds@milliseconds^0,c
  1591  0006F6  EC0E  F006         	call	_DELAY_milliseconds	;wreg free
  1592  0006FA  0012               	return		;funcret
  1593  0006FC                     __end_of_config_RN2903:
  1594                           	callstack 0
  1595                           
  1596 ;; *************** function _sprintf *****************
  1597 ;; Defined at:
  1598 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  sp              2   16[COMRAM] PTR unsigned char 
  1601 ;;		 -> tx_buf(80), 
  1602 ;;  f               2   18[COMRAM] PTR const unsigned char 
  1603 ;;		 -> STR_16(83), STR_14(83), STR_12(35), STR_10(22), 
  1604 ;;		 -> STR_8(18), STR_6(27), 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  idx             1   56[COMRAM] unsigned char 
  1607 ;;  tmpval          4    0        struct .
  1608 ;;  cp              3    0        PTR const unsigned char 
  1609 ;;  width           2   63[COMRAM] int 
  1610 ;;  val             2   60[COMRAM] unsigned int 
  1611 ;;  ap              2   57[COMRAM] PTR void [1]
  1612 ;;		 -> ?_sprintf(2), 
  1613 ;;  len             2    0        unsigned int 
  1614 ;;  c               1   65[COMRAM] unsigned char 
  1615 ;;  flag            1   62[COMRAM] unsigned char 
  1616 ;;  prec            1   59[COMRAM] char 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  2   16[COMRAM] int 
  1619 ;; Registers used:
  1620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1626 ;;      Params:        36       0       0       0       0       0       0       0       0
  1627 ;;      Locals:        10       0       0       0       0       0       0       0       0
  1628 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1629 ;;      Totals:        50       0       0       0       0       0       0       0       0
  1630 ;;Total ram usage:       50 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    5
  1633 ;; This function calls:
  1634 ;;		___lwdiv
  1635 ;;		___lwmod
  1636 ;;		___wmul
  1637 ;;		_isdigit
  1638 ;; This function is called by:
  1639 ;;		_config_RN2903
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text2
  1644  00006A                     __ptext2:
  1645                           	callstack 0
  1646  00006A                     _sprintf:
  1647                           	callstack 24
  1648                           
  1649                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  1650                           
  1651                           ;incstack = 0
  1652  00006A  0E15               	movlw	low (?_sprintf+4)
  1653  00006C  6E3A               	movwf	sprintf@ap^0,c
  1654  00006E  0E00               	movlw	high (?_sprintf+4)
  1655  000070  6E3B               	movwf	(sprintf@ap+1)^0,c
  1656                           
  1657                           ;doprnt.c: 553: while((c = *f++)) {
  1658  000072  D190               	goto	u1160
  1659  000074                     l1914:
  1660                           
  1661                           ;doprnt.c: 555: if(c != '%')
  1662  000074  0E25               	movlw	37
  1663  000076  1842               	xorwf	sprintf@c^0,w,c
  1664  000078  B4D8               	btfsc	status,2,c
  1665  00007A  D009               	goto	l1920
  1666                           
  1667                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1668  00007C  C011  FFD9         	movff	sprintf@sp,fsr2l
  1669  000080  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  1670  000084  C042  FFDF         	movff	sprintf@c,indf2
  1671  000088  4A11               	infsnz	sprintf@sp^0,f,c
  1672  00008A  2A12               	incf	(sprintf@sp+1)^0,f,c
  1673                           
  1674                           ;doprnt.c: 559: continue;
  1675  00008C  D183               	goto	u1160
  1676  00008E                     l1920:
  1677                           
  1678                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  1679  00008E  0E00               	movlw	0
  1680  000090  6E41               	movwf	(sprintf@width+1)^0,c
  1681  000092  0E00               	movlw	0
  1682  000094  6E40               	movwf	sprintf@width^0,c
  1683                           
  1684                           ;doprnt.c: 565: flag = 0;
  1685  000096  0E00               	movlw	0
  1686  000098  6E3F               	movwf	sprintf@flag^0,c
  1687  00009A  D003               	goto	l1926
  1688  00009C                     l1922:
  1689                           
  1690                           ;doprnt.c: 597: flag |= 0x04;
  1691  00009C  843F               	bsf	sprintf@flag^0,2,c
  1692                           
  1693                           ;doprnt.c: 598: f++;
  1694  00009E  4A13               	infsnz	sprintf@f^0,f,c
  1695  0000A0  2A14               	incf	(sprintf@f+1)^0,f,c
  1696  0000A2                     l1926:
  1697  0000A2  C013  FFF6         	movff	sprintf@f,tblptrl
  1698  0000A6  C014  FFF7         	movff	sprintf@f+1,tblptrh
  1699  0000AA                     	if	0	;tblptru may be non-zero
  1700  0000AA                     	endif
  1701  0000AA                     	if	0	;tblptru may be non-zero
  1702  0000AA                     	endif
  1703  0000AA  0008               	tblrd		*
  1704  0000AC  50F5               	movf	tablat,w,c
  1705                           
  1706                           ; Switch size 1, requested type "simple"
  1707                           ; Number of cases is 1, Range of values is 48 to 48
  1708                           ; switch strategies available:
  1709                           ; Name         Instructions Cycles
  1710                           ; simple_byte            4     3 (average)
  1711                           ;	Chosen strategy is simple_byte
  1712  0000AE  0A30               	xorlw	48	; case 48
  1713  0000B0  B4D8               	btfsc	status,2,c
  1714  0000B2  D7F4               	goto	l1922
  1715                           
  1716                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  1717  0000B4  C013  FFF6         	movff	sprintf@f,tblptrl
  1718  0000B8  C014  FFF7         	movff	sprintf@f+1,tblptrh
  1719  0000BC                     	if	0	;tblptru may be non-zero
  1720  0000BC                     	endif
  1721  0000BC                     	if	0	;tblptru may be non-zero
  1722  0000BC                     	endif
  1723  0000BC  0008               	tblrd		*
  1724  0000BE  50F5               	movf	tablat,w,c
  1725  0000C0  EC30  F006         	call	_isdigit
  1726  0000C4  A0D8               	btfss	status,0,c
  1727  0000C6  D035               	goto	l1944
  1728                           
  1729                           ;doprnt.c: 615: width = 0;
  1730  0000C8  0E00               	movlw	0
  1731  0000CA  6E41               	movwf	(sprintf@width+1)^0,c
  1732  0000CC  0E00               	movlw	0
  1733  0000CE  6E40               	movwf	sprintf@width^0,c
  1734  0000D0                     l1932:
  1735                           
  1736                           ;doprnt.c: 617: width *= 10;
  1737  0000D0  C040  F005         	movff	sprintf@width,___wmul@multiplier
  1738  0000D4  C041  F006         	movff	sprintf@width+1,___wmul@multiplier+1
  1739  0000D8  0E00               	movlw	0
  1740  0000DA  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1741  0000DC  0E0A               	movlw	10
  1742  0000DE  6E07               	movwf	___wmul@multiplicand^0,c
  1743  0000E0  ECE9  F005         	call	___wmul	;wreg free
  1744  0000E4  C005  F040         	movff	?___wmul,sprintf@width
  1745  0000E8  C006  F041         	movff	?___wmul+1,sprintf@width+1
  1746                           
  1747                           ;doprnt.c: 618: width += *f++ - '0';
  1748  0000EC  0ED0               	movlw	208
  1749  0000EE  6E35               	movwf	??_sprintf^0,c
  1750  0000F0  0EFF               	movlw	255
  1751  0000F2  6E36               	movwf	(??_sprintf+1)^0,c
  1752  0000F4  C013  FFF6         	movff	sprintf@f,tblptrl
  1753  0000F8  C014  FFF7         	movff	sprintf@f+1,tblptrh
  1754  0000FC                     	if	0	;tblptru may be non-zero
  1755  0000FC                     	endif
  1756  0000FC                     	if	0	;tblptru may be non-zero
  1757  0000FC                     	endif
  1758  0000FC  0008               	tblrd		*
  1759  0000FE  50F5               	movf	tablat,w,c
  1760  000100  6E37               	movwf	(??_sprintf+2)^0,c
  1761  000102  6A38               	clrf	(??_sprintf+3)^0,c
  1762  000104  5035               	movf	??_sprintf^0,w,c
  1763  000106  2637               	addwf	(??_sprintf+2)^0,f,c
  1764  000108  5036               	movf	(??_sprintf+1)^0,w,c
  1765  00010A  2238               	addwfc	(??_sprintf+3)^0,f,c
  1766  00010C  5037               	movf	(??_sprintf+2)^0,w,c
  1767  00010E  2640               	addwf	sprintf@width^0,f,c
  1768  000110  5038               	movf	(??_sprintf+3)^0,w,c
  1769  000112  2241               	addwfc	(sprintf@width+1)^0,f,c
  1770  000114  4A13               	infsnz	sprintf@f^0,f,c
  1771  000116  2A14               	incf	(sprintf@f+1)^0,f,c
  1772                           
  1773                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  1774  000118  C013  FFF6         	movff	sprintf@f,tblptrl
  1775  00011C  C014  FFF7         	movff	sprintf@f+1,tblptrh
  1776  000120                     	if	0	;tblptru may be non-zero
  1777  000120                     	endif
  1778  000120                     	if	0	;tblptru may be non-zero
  1779  000120                     	endif
  1780  000120  0008               	tblrd		*
  1781  000122  50F5               	movf	tablat,w,c
  1782  000124  EC30  F006         	call	_isdigit
  1783  000128  A0D8               	btfss	status,0,c
  1784  00012A  D003               	goto	l1944
  1785  00012C  D7D1               	goto	l1932
  1786  00012E                     l1940:
  1787                           
  1788                           ;doprnt.c: 747: flag |= 0x80;
  1789  00012E  8E3F               	bsf	sprintf@flag^0,7,c
  1790                           
  1791                           ;doprnt.c: 749: break;
  1792  000130  D017               	goto	l380
  1793  000132                     l1944:
  1794  000132  C013  FFF6         	movff	sprintf@f,tblptrl
  1795  000136  C014  FFF7         	movff	sprintf@f+1,tblptrh
  1796  00013A  4A13               	infsnz	sprintf@f^0,f,c
  1797  00013C  2A14               	incf	(sprintf@f+1)^0,f,c
  1798  00013E                     	if	0	;tblptru may be non-zero
  1799  00013E                     	endif
  1800  00013E                     	if	0	;tblptru may be non-zero
  1801  00013E                     	endif
  1802  00013E  0008               	tblrd		*
  1803  000140  CFF5 F042          	movff	tablat,sprintf@c
  1804  000144  5042               	movf	sprintf@c^0,w,c
  1805                           
  1806                           ; Switch size 1, requested type "simple"
  1807                           ; Number of cases is 4, Range of values is 0 to 120
  1808                           ; switch strategies available:
  1809                           ; Name         Instructions Cycles
  1810                           ; simple_byte           13     7 (average)
  1811                           ;	Chosen strategy is simple_byte
  1812  000146  0A00               	xorlw	0	; case 0
  1813  000148  B4D8               	btfsc	status,2,c
  1814  00014A  D130               	goto	u1170
  1815  00014C  0A64               	xorlw	100	; case 100
  1816  00014E  B4D8               	btfsc	status,2,c
  1817  000150  D007               	goto	l380
  1818  000152  0A0D               	xorlw	13	; case 105
  1819  000154  B4D8               	btfsc	status,2,c
  1820  000156  D004               	goto	l380
  1821  000158  0A11               	xorlw	17	; case 120
  1822  00015A  B4D8               	btfsc	status,2,c
  1823  00015C  D7E8               	goto	l1940
  1824  00015E  D11A               	goto	u1160
  1825  000160                     l380:
  1826                           
  1827                           ;doprnt.c: 1277: if((flag & 0x80) == 0x00)
  1828  000160  BE3F               	btfsc	sprintf@flag^0,7,c
  1829  000162  D015               	goto	l1956
  1830                           
  1831                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  1832  000164  C03A  FFD9         	movff	sprintf@ap,fsr2l
  1833  000168  C03B  FFDA         	movff	sprintf@ap+1,fsr2h
  1834  00016C  CFDE F03D          	movff	postinc2,sprintf@val
  1835  000170  CFDD F03E          	movff	postdec2,sprintf@val+1
  1836  000174  0E02               	movlw	2
  1837  000176  263A               	addwf	sprintf@ap^0,f,c
  1838  000178  0E00               	movlw	0
  1839  00017A  223B               	addwfc	(sprintf@ap+1)^0,f,c
  1840                           
  1841                           ;doprnt.c: 1287: if((int)val < 0) {
  1842  00017C  AE3E               	btfss	(sprintf@val+1)^0,7,c
  1843  00017E  D044               	goto	l1990
  1844                           
  1845                           ;doprnt.c: 1288: flag |= 0x03;
  1846  000180  0E03               	movlw	3
  1847  000182  123F               	iorwf	sprintf@flag^0,f,c
  1848                           
  1849                           ;doprnt.c: 1289: val = -val;
  1850  000184  6C3D               	negf	sprintf@val^0,c
  1851  000186  1E3E               	comf	(sprintf@val+1)^0,f,c
  1852  000188  B0D8               	btfsc	status,0,c
  1853  00018A  2A3E               	incf	(sprintf@val+1)^0,f,c
  1854  00018C  D03D               	goto	l1990
  1855  00018E                     l1956:
  1856                           
  1857                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  1858  00018E  C03A  FFD9         	movff	sprintf@ap,fsr2l
  1859  000192  C03B  FFDA         	movff	sprintf@ap+1,fsr2h
  1860  000196  CFDE F03D          	movff	postinc2,sprintf@val
  1861  00019A  CFDD F03E          	movff	postdec2,sprintf@val+1
  1862  00019E  0E02               	movlw	2
  1863  0001A0  263A               	addwf	sprintf@ap^0,f,c
  1864  0001A2  0E00               	movlw	0
  1865  0001A4  223B               	addwfc	(sprintf@ap+1)^0,f,c
  1866  0001A6  D030               	goto	l1990
  1867  0001A8                     l1960:
  1868                           
  1869                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1870  0001A8  0E01               	movlw	1
  1871  0001AA  6E42               	movwf	sprintf@c^0,c
  1872  0001AC                     l1966:
  1873                           
  1874                           ;doprnt.c: 1332: if(val < dpowers[c])
  1875  0001AC  5042               	movf	sprintf@c^0,w,c
  1876  0001AE  0D02               	mullw	2
  1877  0001B0  0E37               	movlw	low _dpowers
  1878  0001B2  24F3               	addwf	243,w,c
  1879  0001B4  6EF6               	movwf	tblptrl,c
  1880  0001B6  0E7E               	movlw	high _dpowers
  1881  0001B8  20F4               	addwfc	244,w,c
  1882  0001BA  6EF7               	movwf	tblptrh,c
  1883  0001BC                     	if	0	;There are less than 3 active tblptr bytes
  1884  0001BC                     	endif
  1885  0001BC  0009               	tblrd		*+
  1886  0001BE  50F5               	movf	tablat,w,c
  1887  0001C0  5C3D               	subwf	sprintf@val^0,w,c
  1888  0001C2  0009               	tblrd		*+
  1889  0001C4  50F5               	movf	tablat,w,c
  1890  0001C6  583E               	subwfb	(sprintf@val+1)^0,w,c
  1891  0001C8  A0D8               	btfss	status,0,c
  1892  0001CA  D026               	goto	l1992
  1893  0001CC  2A42               	incf	sprintf@c^0,f,c
  1894  0001CE  0E05               	movlw	5
  1895  0001D0  1842               	xorwf	sprintf@c^0,w,c
  1896  0001D2  B4D8               	btfsc	status,2,c
  1897  0001D4  D021               	goto	l1992
  1898  0001D6  D7EA               	goto	l1966
  1899  0001D8                     l1974:
  1900                           
  1901                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1902  0001D8  0E01               	movlw	1
  1903  0001DA  6E42               	movwf	sprintf@c^0,c
  1904  0001DC                     l1980:
  1905                           
  1906                           ;doprnt.c: 1343: if(val < hexpowers[c])
  1907  0001DC  5042               	movf	sprintf@c^0,w,c
  1908  0001DE  0D02               	mullw	2
  1909  0001E0  0E41               	movlw	low _hexpowers
  1910  0001E2  24F3               	addwf	243,w,c
  1911  0001E4  6EF6               	movwf	tblptrl,c
  1912  0001E6  0E7E               	movlw	high _hexpowers
  1913  0001E8  20F4               	addwfc	244,w,c
  1914  0001EA  6EF7               	movwf	tblptrh,c
  1915  0001EC                     	if	0	;There are less than 3 active tblptr bytes
  1916  0001EC                     	endif
  1917  0001EC  0009               	tblrd		*+
  1918  0001EE  50F5               	movf	tablat,w,c
  1919  0001F0  5C3D               	subwf	sprintf@val^0,w,c
  1920  0001F2  0009               	tblrd		*+
  1921  0001F4  50F5               	movf	tablat,w,c
  1922  0001F6  583E               	subwfb	(sprintf@val+1)^0,w,c
  1923  0001F8  A0D8               	btfss	status,0,c
  1924  0001FA  D00E               	goto	l1992
  1925  0001FC  2A42               	incf	sprintf@c^0,f,c
  1926  0001FE  0E04               	movlw	4
  1927  000200  1842               	xorwf	sprintf@c^0,w,c
  1928  000202  B4D8               	btfsc	status,2,c
  1929  000204  D009               	goto	l1992
  1930  000206  D7EA               	goto	l1980
  1931  000208                     l1990:
  1932  000208  503F               	movf	sprintf@flag^0,w,c
  1933  00020A  0B80               	andlw	128
  1934                           
  1935                           ; Switch size 1, requested type "simple"
  1936                           ; Number of cases is 2, Range of values is 0 to 128
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; simple_byte            7     4 (average)
  1940                           ;	Chosen strategy is simple_byte
  1941  00020C  0A00               	xorlw	0	; case 0
  1942  00020E  B4D8               	btfsc	status,2,c
  1943  000210  D7CB               	goto	l1960
  1944  000212  0A80               	xorlw	128	; case 128
  1945  000214  B4D8               	btfsc	status,2,c
  1946  000216  D7E0               	goto	l1974
  1947  000218                     l1992:
  1948                           
  1949                           ;doprnt.c: 1371: if(width && flag & 0x03)
  1950  000218  5040               	movf	sprintf@width^0,w,c
  1951  00021A  1041               	iorwf	(sprintf@width+1)^0,w,c
  1952  00021C  B4D8               	btfsc	status,2,c
  1953  00021E  D009               	goto	l1998
  1954  000220  C03F  F035         	movff	sprintf@flag,??_sprintf
  1955  000224  0E03               	movlw	3
  1956  000226  1635               	andwf	??_sprintf^0,f,c
  1957  000228  B4D8               	btfsc	status,2,c
  1958  00022A  D003               	goto	l1998
  1959                           
  1960                           ;doprnt.c: 1372: width--;
  1961  00022C  0640               	decf	sprintf@width^0,f,c
  1962  00022E  A0D8               	btfss	status,0,c
  1963  000230  0641               	decf	(sprintf@width+1)^0,f,c
  1964  000232                     l1998:
  1965                           
  1966                           ;doprnt.c: 1407: if(width > c)
  1967  000232  5042               	movf	sprintf@c^0,w,c
  1968  000234  6E35               	movwf	??_sprintf^0,c
  1969  000236  6A36               	clrf	(??_sprintf+1)^0,c
  1970  000238  5040               	movf	sprintf@width^0,w,c
  1971  00023A  5C35               	subwf	??_sprintf^0,w,c
  1972  00023C  5036               	movf	(??_sprintf+1)^0,w,c
  1973  00023E  0A80               	xorlw	128
  1974  000240  6E37               	movwf	(??_sprintf+2)^0,c
  1975  000242  5041               	movf	(sprintf@width+1)^0,w,c
  1976  000244  0A80               	xorlw	128
  1977  000246  5837               	subwfb	(??_sprintf+2)^0,w,c
  1978  000248  B0D8               	btfsc	status,0,c
  1979  00024A  D005               	goto	l2002
  1980                           
  1981                           ;doprnt.c: 1408: width -= c;
  1982  00024C  5042               	movf	sprintf@c^0,w,c
  1983  00024E  5E40               	subwf	sprintf@width^0,f,c
  1984  000250  0E00               	movlw	0
  1985  000252  5A41               	subwfb	(sprintf@width+1)^0,f,c
  1986  000254  D004               	goto	l2004
  1987  000256                     l2002:
  1988                           
  1989                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  1990  000256  0E00               	movlw	0
  1991  000258  6E41               	movwf	(sprintf@width+1)^0,c
  1992  00025A  0E00               	movlw	0
  1993  00025C  6E40               	movwf	sprintf@width^0,c
  1994  00025E                     l2004:
  1995                           
  1996                           ;doprnt.c: 1413: if(flag & 0x04) {
  1997  00025E  A43F               	btfss	sprintf@flag^0,2,c
  1998  000260  D01E               	goto	l2020
  1999                           
  2000                           ;doprnt.c: 1418: if(flag & 0x03)
  2001  000262  C03F  F035         	movff	sprintf@flag,??_sprintf
  2002  000266  0E03               	movlw	3
  2003  000268  1635               	andwf	??_sprintf^0,f,c
  2004  00026A  B4D8               	btfsc	status,2,c
  2005  00026C  D008               	goto	l2012
  2006                           
  2007                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  2008  00026E  C011  FFD9         	movff	sprintf@sp,fsr2l
  2009  000272  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  2010  000276  0E2D               	movlw	45
  2011  000278  6EDF               	movwf	indf2,c
  2012  00027A  4A11               	infsnz	sprintf@sp^0,f,c
  2013  00027C  2A12               	incf	(sprintf@sp+1)^0,f,c
  2014  00027E                     l2012:
  2015                           
  2016                           ;doprnt.c: 1441: if(width)
  2017  00027E  5040               	movf	sprintf@width^0,w,c
  2018  000280  1041               	iorwf	(sprintf@width+1)^0,w,c
  2019  000282  B4D8               	btfsc	status,2,c
  2020  000284  D02D               	goto	l2034
  2021                           
  2022                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  2023  000286  C011  FFD9         	movff	sprintf@sp,fsr2l
  2024  00028A  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  2025  00028E  0E30               	movlw	48
  2026  000290  6EDF               	movwf	indf2,c
  2027  000292  4A11               	infsnz	sprintf@sp^0,f,c
  2028  000294  2A12               	incf	(sprintf@sp+1)^0,f,c
  2029                           
  2030                           ;doprnt.c: 1444: while(--width);
  2031  000296  0640               	decf	sprintf@width^0,f,c
  2032  000298  A0D8               	btfss	status,0,c
  2033  00029A  0641               	decf	(sprintf@width+1)^0,f,c
  2034  00029C  D7F0               	goto	l2012
  2035  00029E                     l2020:
  2036                           
  2037                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  2038  00029E  5040               	movf	sprintf@width^0,w,c
  2039  0002A0  1041               	iorwf	(sprintf@width+1)^0,w,c
  2040  0002A2  B4D8               	btfsc	status,2,c
  2041  0002A4  D00F               	goto	u1140
  2042  0002A6                     u1130:
  2043                           
  2044                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  2045  0002A6  C011  FFD9         	movff	sprintf@sp,fsr2l
  2046  0002AA  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  2047  0002AE  0E20               	movlw	32
  2048  0002B0  6EDF               	movwf	indf2,c
  2049  0002B2  4A11               	infsnz	sprintf@sp^0,f,c
  2050  0002B4  2A12               	incf	(sprintf@sp+1)^0,f,c
  2051                           
  2052                           ;doprnt.c: 1457: while(--width);
  2053  0002B6  0640               	decf	sprintf@width^0,f,c
  2054  0002B8  A0D8               	btfss	status,0,c
  2055  0002BA  0641               	decf	(sprintf@width+1)^0,f,c
  2056  0002BC  5040               	movf	sprintf@width^0,w,c
  2057  0002BE  1041               	iorwf	(sprintf@width+1)^0,w,c
  2058  0002C0  A4D8               	btfss	status,2,c
  2059  0002C2  D7F1               	goto	u1130
  2060  0002C4                     u1140:
  2061                           
  2062                           ;doprnt.c: 1464: if(flag & 0x03)
  2063  0002C4  C03F  F035         	movff	sprintf@flag,??_sprintf
  2064  0002C8  0E03               	movlw	3
  2065  0002CA  1635               	andwf	??_sprintf^0,f,c
  2066  0002CC  B4D8               	btfsc	status,2,c
  2067  0002CE  D008               	goto	l2034
  2068                           
  2069                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2070  0002D0  C011  FFD9         	movff	sprintf@sp,fsr2l
  2071  0002D4  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  2072  0002D8  0E2D               	movlw	45
  2073  0002DA  6EDF               	movwf	indf2,c
  2074  0002DC  4A11               	infsnz	sprintf@sp^0,f,c
  2075  0002DE  2A12               	incf	(sprintf@sp+1)^0,f,c
  2076  0002E0                     l2034:
  2077                           
  2078                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2079  0002E0  C042  F03C         	movff	sprintf@c,sprintf@prec
  2080                           
  2081                           ;doprnt.c: 1500: while(prec--) {
  2082  0002E4  D053               	goto	l2050
  2083  0002E6                     l2036:
  2084                           
  2085                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2086  0002E6  503C               	movf	sprintf@prec^0,w,c
  2087  0002E8  0D02               	mullw	2
  2088  0002EA  0E37               	movlw	low _dpowers
  2089  0002EC  24F3               	addwf	243,w,c
  2090  0002EE  6EF6               	movwf	tblptrl,c
  2091  0002F0  0E7E               	movlw	high _dpowers
  2092  0002F2  20F4               	addwfc	244,w,c
  2093  0002F4  6EF7               	movwf	tblptrh,c
  2094  0002F6                     	if	0	;There are less than 3 active tblptr bytes
  2095  0002F6                     	endif
  2096  0002F6  0009               	tblrd		*+
  2097  0002F8  CFF5 F007          	movff	tablat,___lwdiv@divisor
  2098  0002FC  000A               	tblrd		*-
  2099  0002FE  CFF5 F008          	movff	tablat,___lwdiv@divisor+1
  2100  000302  C03D  F005         	movff	sprintf@val,___lwdiv@dividend
  2101  000306  C03E  F006         	movff	sprintf@val+1,___lwdiv@dividend+1
  2102  00030A  EC0D  F005         	call	___lwdiv	;wreg free
  2103  00030E  C005  F00C         	movff	?___lwdiv,___lwmod@dividend
  2104  000312  C006  F00D         	movff	?___lwdiv+1,___lwmod@dividend+1
  2105  000316  0E00               	movlw	0
  2106  000318  6E0F               	movwf	(___lwmod@divisor+1)^0,c
  2107  00031A  0E0A               	movlw	10
  2108  00031C  6E0E               	movwf	___lwmod@divisor^0,c
  2109  00031E  EC5B  F005         	call	___lwmod	;wreg free
  2110  000322  500C               	movf	?___lwmod^0,w,c
  2111  000324  0F30               	addlw	48
  2112  000326  6E42               	movwf	sprintf@c^0,c
  2113                           
  2114                           ;doprnt.c: 1517: break;
  2115  000328  D029               	goto	l2046
  2116  00032A                     l2038:
  2117                           
  2118                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
  2119  00032A  C03D  F005         	movff	sprintf@val,___lwdiv@dividend
  2120  00032E  C03E  F006         	movff	sprintf@val+1,___lwdiv@dividend+1
  2121  000332  503C               	movf	sprintf@prec^0,w,c
  2122  000334  0D02               	mullw	2
  2123  000336  0E41               	movlw	low _hexpowers
  2124  000338  24F3               	addwf	243,w,c
  2125  00033A  6EF6               	movwf	tblptrl,c
  2126  00033C  0E7E               	movlw	high _hexpowers
  2127  00033E  20F4               	addwfc	244,w,c
  2128  000340  6EF7               	movwf	tblptrh,c
  2129  000342                     	if	0	;There are less than 3 active tblptr bytes
  2130  000342                     	endif
  2131  000342  0009               	tblrd		*+
  2132  000344  CFF5 F007          	movff	tablat,___lwdiv@divisor
  2133  000348  000A               	tblrd		*-
  2134  00034A  CFF5 F008          	movff	tablat,___lwdiv@divisor+1
  2135  00034E  EC0D  F005         	call	___lwdiv	;wreg free
  2136  000352  5005               	movf	?___lwdiv^0,w,c
  2137  000354  0B0F               	andlw	15
  2138  000356  6E39               	movwf	sprintf@idx^0,c
  2139                           
  2140                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  2141  000358  0E88               	movlw	low STR_34
  2142  00035A  2439               	addwf	sprintf@idx^0,w,c
  2143  00035C  6EF6               	movwf	tblptrl,c
  2144  00035E  6AF7               	clrf	tblptrh,c
  2145  000360  0E7F               	movlw	high STR_34
  2146  000362  22F7               	addwfc	tblptrh,f,c
  2147  000364                     	if	0	;There are less than 3 active tblptr bytes
  2148  000364                     	endif
  2149  000364  0008               	tblrd		*
  2150  000366  CFF5 F042          	movff	tablat,sprintf@c
  2151                           
  2152                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  2153  00036A  D008               	goto	l2046
  2154  00036C                     l2044:
  2155  00036C  503F               	movf	sprintf@flag^0,w,c
  2156  00036E  0B80               	andlw	128
  2157                           
  2158                           ; Switch size 1, requested type "simple"
  2159                           ; Number of cases is 2, Range of values is 0 to 128
  2160                           ; switch strategies available:
  2161                           ; Name         Instructions Cycles
  2162                           ; simple_byte            7     4 (average)
  2163                           ;	Chosen strategy is simple_byte
  2164  000370  0A00               	xorlw	0	; case 0
  2165  000372  B4D8               	btfsc	status,2,c
  2166  000374  D7B8               	goto	l2036
  2167  000376  0A80               	xorlw	128	; case 128
  2168  000378  B4D8               	btfsc	status,2,c
  2169  00037A  D7D7               	goto	l2038
  2170  00037C                     l2046:
  2171                           
  2172                           ;doprnt.c: 1550: ((*sp++ = (c)));
  2173  00037C  C011  FFD9         	movff	sprintf@sp,fsr2l
  2174  000380  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  2175  000384  C042  FFDF         	movff	sprintf@c,indf2
  2176  000388  4A11               	infsnz	sprintf@sp^0,f,c
  2177  00038A  2A12               	incf	(sprintf@sp+1)^0,f,c
  2178  00038C                     l2050:
  2179  00038C  063C               	decf	sprintf@prec^0,f,c
  2180  00038E  283C               	incf	sprintf@prec^0,w,c
  2181  000390  A4D8               	btfss	status,2,c
  2182  000392  D7EC               	goto	l2044
  2183  000394                     u1160:
  2184  000394  C013  FFF6         	movff	sprintf@f,tblptrl
  2185  000398  C014  FFF7         	movff	sprintf@f+1,tblptrh
  2186  00039C  4A13               	infsnz	sprintf@f^0,f,c
  2187  00039E  2A14               	incf	(sprintf@f+1)^0,f,c
  2188  0003A0                     	if	0	;tblptru may be non-zero
  2189  0003A0                     	endif
  2190  0003A0                     	if	0	;tblptru may be non-zero
  2191  0003A0                     	endif
  2192  0003A0  0008               	tblrd		*
  2193  0003A2  CFF5 F042          	movff	tablat,sprintf@c
  2194  0003A6  5042               	movf	sprintf@c^0,w,c
  2195  0003A8  A4D8               	btfss	status,2,c
  2196  0003AA  D664               	goto	l1914
  2197  0003AC                     u1170:
  2198                           
  2199                           ;doprnt.c: 1564: *sp = 0;
  2200  0003AC  C011  FFD9         	movff	sprintf@sp,fsr2l
  2201  0003B0  C012  FFDA         	movff	sprintf@sp+1,fsr2h
  2202  0003B4  0E00               	movlw	0
  2203  0003B6  6EDF               	movwf	indf2,c
  2204  0003B8  0012               	return		;funcret
  2205  0003BA                     __end_of_sprintf:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _isdigit *****************
  2209 ;; Defined at:
  2210 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\isdigit.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  c               1    wreg     unsigned char 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  c               1    6[COMRAM] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;		None               void
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2224 ;;      Params:         0       0       0       0       0       0       0       0       0
  2225 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2226 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2227 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2228 ;;Total ram usage:        3 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    4
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_sprintf
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text3
  2239  000C60                     __ptext3:
  2240                           	callstack 0
  2241  000C60                     _isdigit:
  2242                           	callstack 24
  2243                           
  2244                           ;incstack = 0
  2245                           ;isdigit@c stored from wreg
  2246  000C60  6E07               	movwf	isdigit@c^0,c
  2247  000C62  0E00               	movlw	0
  2248  000C64  6E06               	movwf	_isdigit$1287^0,c
  2249  000C66  0E3A               	movlw	58
  2250  000C68  6007               	cpfslt	isdigit@c^0,c
  2251  000C6A  D005               	goto	l1804
  2252  000C6C  0E2F               	movlw	47
  2253  000C6E  6407               	cpfsgt	isdigit@c^0,c
  2254  000C70  D002               	goto	l1804
  2255  000C72  0E01               	movlw	1
  2256  000C74  6E06               	movwf	_isdigit$1287^0,c
  2257  000C76                     l1804:
  2258  000C76  C006  F005         	movff	_isdigit$1287,??_isdigit
  2259  000C7A  3005               	rrcf	??_isdigit^0,w,c
  2260  000C7C  0012               	return		;funcret
  2261  000C7E                     __end_of_isdigit:
  2262                           	callstack 0
  2263                           
  2264 ;; *************** function ___wmul *****************
  2265 ;; Defined at:
  2266 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  multiplier      2    4[COMRAM] unsigned int 
  2269 ;;  multiplicand    2    6[COMRAM] unsigned int 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  product         2    8[COMRAM] unsigned int 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  2    4[COMRAM] unsigned int 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0, prodl, prodh
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2281 ;;      Params:         4       0       0       0       0       0       0       0       0
  2282 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2284 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2285 ;;Total ram usage:        6 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    4
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_sprintf
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text4
  2296  000BD2                     __ptext4:
  2297                           	callstack 0
  2298  000BD2                     ___wmul:
  2299                           	callstack 24
  2300                           
  2301                           ;incstack = 0
  2302  000BD2  5005               	movf	___wmul@multiplier^0,w,c
  2303  000BD4  0207               	mulwf	___wmul@multiplicand^0,c
  2304  000BD6  CFF3 F009          	movff	prodl,___wmul@product
  2305  000BDA  CFF4 F00A          	movff	prodh,___wmul@product+1
  2306  000BDE  5005               	movf	___wmul@multiplier^0,w,c
  2307  000BE0  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  2308  000BE2  50F3               	movf	243,w,c
  2309  000BE4  260A               	addwf	(___wmul@product+1)^0,f,c
  2310  000BE6  5006               	movf	(___wmul@multiplier+1)^0,w,c
  2311  000BE8  0207               	mulwf	___wmul@multiplicand^0,c
  2312  000BEA  50F3               	movf	243,w,c
  2313  000BEC  260A               	addwf	(___wmul@product+1)^0,f,c
  2314  000BEE  C009  F005         	movff	___wmul@product,?___wmul
  2315  000BF2  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  2316  000BF6  0012               	return		;funcret
  2317  000BF8                     __end_of___wmul:
  2318                           	callstack 0
  2319                           
  2320 ;; *************** function ___lwmod *****************
  2321 ;; Defined at:
  2322 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  dividend        2   11[COMRAM] unsigned int 
  2325 ;;  divisor         2   13[COMRAM] unsigned int 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  counter         1   15[COMRAM] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  2   11[COMRAM] unsigned int 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2337 ;;      Params:         4       0       0       0       0       0       0       0       0
  2338 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2340 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2341 ;;Total ram usage:        5 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    4
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_sprintf
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text5
  2352  000AB6                     __ptext5:
  2353                           	callstack 0
  2354  000AB6                     ___lwmod:
  2355                           	callstack 24
  2356                           
  2357                           ;incstack = 0
  2358  000AB6  500E               	movf	___lwmod@divisor^0,w,c
  2359  000AB8  100F               	iorwf	(___lwmod@divisor+1)^0,w,c
  2360  000ABA  B4D8               	btfsc	status,2,c
  2361  000ABC  D018               	goto	l909
  2362  000ABE  0E01               	movlw	1
  2363  000AC0  6E10               	movwf	___lwmod@counter^0,c
  2364  000AC2  D004               	goto	l1842
  2365  000AC4                     l1840:
  2366  000AC4  90D8               	bcf	status,0,c
  2367  000AC6  360E               	rlcf	___lwmod@divisor^0,f,c
  2368  000AC8  360F               	rlcf	(___lwmod@divisor+1)^0,f,c
  2369  000ACA  2A10               	incf	___lwmod@counter^0,f,c
  2370  000ACC                     l1842:
  2371  000ACC  AE0F               	btfss	(___lwmod@divisor+1)^0,7,c
  2372  000ACE  D7FA               	goto	l1840
  2373  000AD0                     u900:
  2374  000AD0  500E               	movf	___lwmod@divisor^0,w,c
  2375  000AD2  5C0C               	subwf	___lwmod@dividend^0,w,c
  2376  000AD4  500F               	movf	(___lwmod@divisor+1)^0,w,c
  2377  000AD6  580D               	subwfb	(___lwmod@dividend+1)^0,w,c
  2378  000AD8  A0D8               	btfss	status,0,c
  2379  000ADA  D004               	goto	l1848
  2380  000ADC  500E               	movf	___lwmod@divisor^0,w,c
  2381  000ADE  5E0C               	subwf	___lwmod@dividend^0,f,c
  2382  000AE0  500F               	movf	(___lwmod@divisor+1)^0,w,c
  2383  000AE2  5A0D               	subwfb	(___lwmod@dividend+1)^0,f,c
  2384  000AE4                     l1848:
  2385  000AE4  90D8               	bcf	status,0,c
  2386  000AE6  320F               	rrcf	(___lwmod@divisor+1)^0,f,c
  2387  000AE8  320E               	rrcf	___lwmod@divisor^0,f,c
  2388  000AEA  2E10               	decfsz	___lwmod@counter^0,f,c
  2389  000AEC  D7F1               	goto	u900
  2390  000AEE                     l909:
  2391  000AEE  C00C  F00C         	movff	___lwmod@dividend,?___lwmod
  2392  000AF2  C00D  F00D         	movff	___lwmod@dividend+1,?___lwmod+1
  2393  000AF6  0012               	return		;funcret
  2394  000AF8                     __end_of___lwmod:
  2395                           	callstack 0
  2396                           
  2397 ;; *************** function ___lwdiv *****************
  2398 ;; Defined at:
  2399 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  dividend        2    4[COMRAM] unsigned int 
  2402 ;;  divisor         2    6[COMRAM] unsigned int 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  quotient        2    8[COMRAM] unsigned int 
  2405 ;;  counter         1   10[COMRAM] unsigned char 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  2    4[COMRAM] unsigned int 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2415 ;;      Params:         4       0       0       0       0       0       0       0       0
  2416 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2418 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2419 ;;Total ram usage:        7 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    4
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_sprintf
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text6
  2430  000A1A                     __ptext6:
  2431                           	callstack 0
  2432  000A1A                     ___lwdiv:
  2433                           	callstack 24
  2434                           
  2435                           ;incstack = 0
  2436  000A1A  0E00               	movlw	0
  2437  000A1C  6E0A               	movwf	(___lwdiv@quotient+1)^0,c
  2438  000A1E  0E00               	movlw	0
  2439  000A20  6E09               	movwf	___lwdiv@quotient^0,c
  2440  000A22  5007               	movf	___lwdiv@divisor^0,w,c
  2441  000A24  1008               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2442  000A26  B4D8               	btfsc	status,2,c
  2443  000A28  D01C               	goto	l899
  2444  000A2A  0E01               	movlw	1
  2445  000A2C  6E0B               	movwf	___lwdiv@counter^0,c
  2446  000A2E  D004               	goto	l1822
  2447  000A30                     l1820:
  2448  000A30  90D8               	bcf	status,0,c
  2449  000A32  3607               	rlcf	___lwdiv@divisor^0,f,c
  2450  000A34  3608               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2451  000A36  2A0B               	incf	___lwdiv@counter^0,f,c
  2452  000A38                     l1822:
  2453  000A38  AE08               	btfss	(___lwdiv@divisor+1)^0,7,c
  2454  000A3A  D7FA               	goto	l1820
  2455  000A3C                     u870:
  2456  000A3C  90D8               	bcf	status,0,c
  2457  000A3E  3609               	rlcf	___lwdiv@quotient^0,f,c
  2458  000A40  360A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2459  000A42  5007               	movf	___lwdiv@divisor^0,w,c
  2460  000A44  5C05               	subwf	___lwdiv@dividend^0,w,c
  2461  000A46  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  2462  000A48  5806               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2463  000A4A  A0D8               	btfss	status,0,c
  2464  000A4C  D005               	goto	l1832
  2465  000A4E  5007               	movf	___lwdiv@divisor^0,w,c
  2466  000A50  5E05               	subwf	___lwdiv@dividend^0,f,c
  2467  000A52  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  2468  000A54  5A06               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2469  000A56  8009               	bsf	___lwdiv@quotient^0,0,c
  2470  000A58                     l1832:
  2471  000A58  90D8               	bcf	status,0,c
  2472  000A5A  3208               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2473  000A5C  3207               	rrcf	___lwdiv@divisor^0,f,c
  2474  000A5E  2E0B               	decfsz	___lwdiv@counter^0,f,c
  2475  000A60  D7ED               	goto	u870
  2476  000A62                     l899:
  2477  000A62  C009  F005         	movff	___lwdiv@quotient,?___lwdiv
  2478  000A66  C00A  F006         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2479  000A6A  0012               	return		;funcret
  2480  000A6C                     __end_of___lwdiv:
  2481                           	callstack 0
  2482                           
  2483 ;; *************** function _send_RN2903 *****************
  2484 ;; Defined at:
  2485 ;;		line 52 in file "main.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  data            2    5[COMRAM] PTR unsigned char 
  2488 ;;		 -> STR_32(26), STR_30(15), STR_28(17), STR_26(13), 
  2489 ;;		 -> STR_24(15), STR_22(14), STR_20(11), STR_18(15), 
  2490 ;;		 -> tx_buf(80), STR_4(25), STR_2(14), STR_1(12), 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  count           2   11[COMRAM] int 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2502 ;;      Params:         2       0       0       0       0       0       0       0       0
  2503 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2504 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2505 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2506 ;;Total ram usage:        8 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    5
  2509 ;; This function calls:
  2510 ;;		_EUSART1_Write
  2511 ;; This function is called by:
  2512 ;;		_config_RN2903
  2513 ;;		_main
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text7
  2518  0008D2                     __ptext7:
  2519                           	callstack 0
  2520  0008D2                     _send_RN2903:
  2521                           	callstack 25
  2522                           
  2523                           ;main.c: 54: int count = 0;
  2524                           
  2525                           ;incstack = 0
  2526  0008D2  0E00               	movlw	0
  2527  0008D4  6E0D               	movwf	(send_RN2903@count+1)^0,c
  2528  0008D6  0E00               	movlw	0
  2529  0008D8  6E0C               	movwf	send_RN2903@count^0,c
  2530                           
  2531                           ;main.c: 56: while(data[count-1]!=0x0A)
  2532  0008DA  D01A               	goto	l1886
  2533  0008DC                     l1882:
  2534                           
  2535                           ;main.c: 57: {;main.c: 58: EUSART1_Write(data[count]);
  2536  0008DC  500C               	movf	send_RN2903@count^0,w,c
  2537  0008DE  2406               	addwf	send_RN2903@data^0,w,c
  2538  0008E0  6E08               	movwf	??_send_RN2903^0,c
  2539  0008E2  500D               	movf	(send_RN2903@count+1)^0,w,c
  2540  0008E4  2007               	addwfc	(send_RN2903@data+1)^0,w,c
  2541  0008E6  6E09               	movwf	(??_send_RN2903+1)^0,c
  2542  0008E8  C008  FFF6         	movff	??_send_RN2903,tblptrl
  2543  0008EC  C009  FFF7         	movff	??_send_RN2903+1,tblptrh
  2544  0008F0  6AF8               	clrf	tblptru,c
  2545  0008F2  0E07               	movlw	(high __ramtop+-1)
  2546  0008F4  64F7               	cpfsgt	tblptrh,c
  2547  0008F6  D003               	bra	u927
  2548  0008F8  0008               	tblrd		*
  2549  0008FA  50F5               	movf	tablat,w,c
  2550  0008FC  D005               	bra	u920
  2551  0008FE                     u927:
  2552  0008FE  CFF6 FFE1          	movff	tblptrl,fsr1l
  2553  000902  CFF7 FFE2          	movff	tblptrh,fsr1h
  2554  000906  50E7               	movf	indf1,w,c
  2555  000908                     u920:
  2556  000908  ECB9  F005         	call	_EUSART1_Write
  2557                           
  2558                           ;main.c: 59: count++;
  2559  00090C  4A0C               	infsnz	send_RN2903@count^0,f,c
  2560  00090E  2A0D               	incf	(send_RN2903@count+1)^0,f,c
  2561  000910                     l1886:
  2562  000910  0EFF               	movlw	255
  2563  000912  6E08               	movwf	??_send_RN2903^0,c
  2564  000914  0EFF               	movlw	255
  2565  000916  6E09               	movwf	(??_send_RN2903+1)^0,c
  2566  000918  500C               	movf	send_RN2903@count^0,w,c
  2567  00091A  2406               	addwf	send_RN2903@data^0,w,c
  2568  00091C  6E0A               	movwf	(??_send_RN2903+2)^0,c
  2569  00091E  500D               	movf	(send_RN2903@count+1)^0,w,c
  2570  000920  2007               	addwfc	(send_RN2903@data+1)^0,w,c
  2571  000922  6E0B               	movwf	(??_send_RN2903+3)^0,c
  2572  000924  5008               	movf	??_send_RN2903^0,w,c
  2573  000926  260A               	addwf	(??_send_RN2903+2)^0,f,c
  2574  000928  5009               	movf	(??_send_RN2903+1)^0,w,c
  2575  00092A  220B               	addwfc	(??_send_RN2903+3)^0,f,c
  2576  00092C  C00A  FFF6         	movff	??_send_RN2903+2,tblptrl
  2577  000930  C00B  FFF7         	movff	??_send_RN2903+3,tblptrh
  2578  000934  6AF8               	clrf	tblptru,c
  2579  000936  0E07               	movlw	(high __ramtop+-1)
  2580  000938  64F7               	cpfsgt	tblptrh,c
  2581  00093A  D003               	bra	u937
  2582  00093C  0008               	tblrd		*
  2583  00093E  50F5               	movf	tablat,w,c
  2584  000940  D005               	bra	u930
  2585  000942                     u937:
  2586  000942  CFF6 FFE1          	movff	tblptrl,fsr1l
  2587  000946  CFF7 FFE2          	movff	tblptrh,fsr1h
  2588  00094A  50E7               	movf	indf1,w,c
  2589  00094C                     u930:
  2590  00094C  0A0A               	xorlw	10
  2591  00094E  B4D8               	btfsc	status,2,c
  2592  000950  0012               	return	
  2593  000952  D7C4               	goto	l1882
  2594  000954                     __end_of_send_RN2903:
  2595                           	callstack 0
  2596                           
  2597 ;; *************** function _EUSART1_Write *****************
  2598 ;; Defined at:
  2599 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  txData          1    wreg     unsigned char 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  txData          1    4[COMRAM] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2613 ;;      Params:         0       0       0       0       0       0       0       0       0
  2614 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2616 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2617 ;;Total ram usage:        1 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    4
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_send_RN2903
  2624 ;;		_putch
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text8
  2629  000B72                     __ptext8:
  2630                           	callstack 0
  2631  000B72                     _EUSART1_Write:
  2632                           	callstack 25
  2633                           
  2634                           ;incstack = 0
  2635                           ;EUSART1_Write@txData stored from wreg
  2636  000B72  6E05               	movwf	EUSART1_Write@txData^0,c
  2637  000B74                     
  2638                           ;eusart1.c: 175: while(0 == eusart1TxBufferRemaining)
  2639  000B74  5051               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  2640  000B76  B4D8               	btfsc	status,2,c
  2641  000B78  D7FD               	goto	l1756
  2642                           
  2643                           ;eusart1.c: 177: };eusart1.c: 179: if(0 == PIE1bits.TX1IE)
  2644  000B7A  B89D               	btfsc	157,4,c	;volatile
  2645  000B7C  D003               	goto	l186
  2646                           
  2647                           ;eusart1.c: 180: {;eusart1.c: 181: TXREG1 = txData;
  2648  000B7E  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2649                           
  2650                           ;eusart1.c: 182: }
  2651  000B82  D010               	goto	l1772
  2652  000B84                     l186:
  2653                           
  2654                           ;eusart1.c: 183: else;eusart1.c: 184: {;eusart1.c: 185: PIE1bits.TX1IE = 0;
  2655  000B84  989D               	bcf	157,4,c	;volatile
  2656                           
  2657                           ;eusart1.c: 186: eusart1TxBuffer[eusart1TxHead++] = txData;
  2658  000B86  0E3E               	movlw	low _eusart1TxBuffer
  2659  000B88  2453               	addwf	_eusart1TxHead^0,w,c	;volatile
  2660  000B8A  6ED9               	movwf	fsr2l,c
  2661  000B8C  6ADA               	clrf	fsr2h,c
  2662  000B8E  0E01               	movlw	high _eusart1TxBuffer
  2663  000B90  22DA               	addwfc	fsr2h,f,c
  2664  000B92  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  2665  000B96  2A53               	incf	_eusart1TxHead^0,f,c	;volatile
  2666                           
  2667                           ;eusart1.c: 187: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  2668  000B98  0E3D               	movlw	61
  2669  000B9A  6453               	cpfsgt	_eusart1TxHead^0,c	;volatile
  2670  000B9C  D002               	goto	l1770
  2671                           
  2672                           ;eusart1.c: 188: {;eusart1.c: 189: eusart1TxHead = 0;
  2673  000B9E  0E00               	movlw	0
  2674  000BA0  6E53               	movwf	_eusart1TxHead^0,c	;volatile
  2675  000BA2                     l1770:
  2676                           
  2677                           ;eusart1.c: 190: };eusart1.c: 191: eusart1TxBufferRemaining--;
  2678  000BA2  0651               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  2679  000BA4                     l1772:
  2680                           
  2681                           ;eusart1.c: 192: };eusart1.c: 193: PIE1bits.TX1IE = 1;
  2682  000BA4  889D               	bsf	157,4,c	;volatile
  2683  000BA6  0012               	return		;funcret
  2684  000BA8                     __end_of_EUSART1_Write:
  2685                           	callstack 0
  2686                           
  2687 ;; *************** function _receive_RN2903 *****************
  2688 ;; Defined at:
  2689 ;;		line 64 in file "main.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  data            2   11[COMRAM] PTR unsigned char 
  2692 ;;		 -> STR_33(5), STR_31(5), STR_29(5), STR_27(5), 
  2693 ;;		 -> STR_25(5), STR_23(5), STR_21(5), STR_19(5), 
  2694 ;;		 -> STR_17(5), STR_15(5), STR_13(5), STR_11(5), 
  2695 ;;		 -> STR_9(5), STR_7(5), STR_5(5), STR_3(5), 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  rx_data        80    0[BANK0 ] unsigned char [80]
  2698 ;;  count           2   80[BANK0 ] int 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      unsigned char 
  2701 ;; Registers used:
  2702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2708 ;;      Params:         2       0       0       0       0       0       0       0       0
  2709 ;;      Locals:         0      82       0       0       0       0       0       0       0
  2710 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2711 ;;      Totals:         7      82       0       0       0       0       0       0       0
  2712 ;;Total ram usage:       89 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    5
  2715 ;; This function calls:
  2716 ;;		_DELAY_milliseconds
  2717 ;;		_EUSART1_Read
  2718 ;;		_strcmp
  2719 ;; This function is called by:
  2720 ;;		_config_RN2903
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text9
  2726  000844                     __ptext9:
  2727                           	callstack 0
  2728  000844                     _receive_RN2903:
  2729                           	callstack 25
  2730                           
  2731                           ;main.c: 66: int count = 0;
  2732                           
  2733                           ;incstack = 0
  2734  000844  0E00               	movlw	0
  2735  000846  0100               	movlb	0	; () banked
  2736  000848  6FB1               	movwf	(receive_RN2903@count+1)& (0+255),b
  2737  00084A  0E00               	movlw	0
  2738  00084C  6FB0               	movwf	receive_RN2903@count& (0+255),b
  2739  00084E                     l1890:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;main.c: 70: rx_data[count]= EUSART1_Read();
  2743  00084E  EC9B  F005         	call	_EUSART1_Read	;wreg free
  2744  000852  6E0E               	movwf	??_receive_RN2903^0,c
  2745  000854  0E60               	movlw	low receive_RN2903@rx_data
  2746  000856  0100               	movlb	0	; () banked
  2747  000858  25B0               	addwf	receive_RN2903@count& (0+255),w,b
  2748  00085A  6ED9               	movwf	fsr2l,c
  2749  00085C  0E00               	movlw	high receive_RN2903@rx_data
  2750  00085E  21B1               	addwfc	(receive_RN2903@count+1)& (0+255),w,b
  2751  000860  6EDA               	movwf	fsr2h,c
  2752  000862  C00E  FFDF         	movff	??_receive_RN2903,indf2
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;main.c: 71: count++;
  2756  000866  4BB0               	infsnz	receive_RN2903@count& (0+255),f,b
  2757  000868  2BB1               	incf	(receive_RN2903@count+1)& (0+255),f,b
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;main.c: 72: }while (rx_data[count-1] !=0x0A);
  2761  00086A  0EFF               	movlw	255
  2762  00086C  6E0E               	movwf	??_receive_RN2903^0,c
  2763  00086E  0EFF               	movlw	255
  2764  000870  6E0F               	movwf	(??_receive_RN2903+1)^0,c
  2765  000872  C0B0  F010         	movff	receive_RN2903@count,??_receive_RN2903+2
  2766  000876  C0B1  F011         	movff	receive_RN2903@count+1,??_receive_RN2903+3
  2767  00087A  500E               	movf	??_receive_RN2903^0,w,c
  2768  00087C  2610               	addwf	(??_receive_RN2903+2)^0,f,c
  2769  00087E  500F               	movf	(??_receive_RN2903+1)^0,w,c
  2770  000880  2211               	addwfc	(??_receive_RN2903+3)^0,f,c
  2771  000882  0E60               	movlw	low receive_RN2903@rx_data
  2772  000884  2410               	addwf	(??_receive_RN2903+2)^0,w,c
  2773  000886  6ED9               	movwf	fsr2l,c
  2774  000888  0E00               	movlw	high receive_RN2903@rx_data
  2775  00088A  2011               	addwfc	(??_receive_RN2903+3)^0,w,c
  2776  00088C  6EDA               	movwf	fsr2h,c
  2777  00088E  0E0A               	movlw	10
  2778  000890  18DE               	xorwf	postinc2,w,c
  2779  000892  A4D8               	btfss	status,2,c
  2780  000894  D7DC               	goto	l1890
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;main.c: 73: if (strcmp(rx_data,data))
  2784  000896  0E60               	movlw	low receive_RN2903@rx_data
  2785  000898  6E05               	movwf	strcmp@s1^0,c
  2786  00089A  0E00               	movlw	high receive_RN2903@rx_data
  2787  00089C  6E06               	movwf	(strcmp@s1+1)^0,c
  2788  00089E  C00C  F007         	movff	receive_RN2903@data,strcmp@s2
  2789  0008A2  C00D  F008         	movff	receive_RN2903@data+1,strcmp@s2+1
  2790  0008A6  EC36  F005         	call	_strcmp	;wreg free
  2791  0008AA  5005               	movf	?_strcmp^0,w,c
  2792  0008AC  1006               	iorwf	(?_strcmp+1)^0,w,c
  2793  0008AE  B4D8               	btfsc	status,2,c
  2794  0008B0  D008               	goto	l1906
  2795                           
  2796                           ;main.c: 74: {;main.c: 75: DELAY_milliseconds(20);
  2797  0008B2  0E00               	movlw	0
  2798  0008B4  6E06               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  2799  0008B6  0E14               	movlw	20
  2800  0008B8  6E05               	movwf	DELAY_milliseconds@milliseconds^0,c
  2801  0008BA  EC0E  F006         	call	_DELAY_milliseconds	;wreg free
  2802                           
  2803                           ;main.c: 76: return 0;
  2804  0008BE  0E00               	movlw	0
  2805  0008C0  0012               	return	
  2806  0008C2                     l1906:
  2807                           
  2808                           ;main.c: 78: DELAY_milliseconds(20);
  2809  0008C2  0E00               	movlw	0
  2810  0008C4  6E06               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  2811  0008C6  0E14               	movlw	20
  2812  0008C8  6E05               	movwf	DELAY_milliseconds@milliseconds^0,c
  2813  0008CA  EC0E  F006         	call	_DELAY_milliseconds	;wreg free
  2814                           
  2815                           ;main.c: 79: return 1;
  2816  0008CE  0E01               	movlw	1
  2817  0008D0  0012               	return		;funcret
  2818  0008D2                     __end_of_receive_RN2903:
  2819                           	callstack 0
  2820                           
  2821 ;; *************** function _strcmp *****************
  2822 ;; Defined at:
  2823 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcmp.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  s1              2    4[COMRAM] PTR const unsigned char 
  2826 ;;		 -> receive_RN2903@rx_data(80), 
  2827 ;;  s2              2    6[COMRAM] PTR const unsigned char 
  2828 ;;		 -> STR_33(5), STR_31(5), STR_29(5), STR_27(5), 
  2829 ;;		 -> STR_25(5), STR_23(5), STR_21(5), STR_19(5), 
  2830 ;;		 -> STR_17(5), STR_15(5), STR_13(5), STR_11(5), 
  2831 ;;		 -> STR_9(5), STR_7(5), STR_5(5), STR_3(5), 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  r               1   10[COMRAM] char 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  2    4[COMRAM] int 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2843 ;;      Params:         4       0       0       0       0       0       0       0       0
  2844 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2845 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2846 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2847 ;;Total ram usage:        7 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    4
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_receive_RN2903
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text10
  2858  000A6C                     __ptext10:
  2859                           	callstack 0
  2860  000A6C                     _strcmp:
  2861                           	callstack 25
  2862                           
  2863                           ;incstack = 0
  2864  000A6C  D004               	goto	l1788
  2865  000A6E                     l1786:
  2866  000A6E  4A05               	infsnz	strcmp@s1^0,f,c
  2867  000A70  2A06               	incf	(strcmp@s1+1)^0,f,c
  2868  000A72  4A07               	infsnz	strcmp@s2^0,f,c
  2869  000A74  2A08               	incf	(strcmp@s2+1)^0,f,c
  2870  000A76                     l1788:
  2871  000A76  C007  FFF6         	movff	strcmp@s2,tblptrl
  2872  000A7A  C008  FFF7         	movff	strcmp@s2+1,tblptrh
  2873  000A7E                     	if	0	;tblptru may be non-zero
  2874  000A7E                     	endif
  2875  000A7E                     	if	0	;tblptru may be non-zero
  2876  000A7E                     	endif
  2877  000A7E  0008               	tblrd		*
  2878  000A80  CFF5 F009          	movff	tablat,??_strcmp
  2879  000A84  C005  FFD9         	movff	strcmp@s1,fsr2l
  2880  000A88  C006  FFDA         	movff	strcmp@s1+1,fsr2h
  2881  000A8C  50DF               	movf	indf2,w,c
  2882  000A8E  6E0A               	movwf	(??_strcmp+1)^0,c
  2883  000A90  5009               	movf	??_strcmp^0,w,c
  2884  000A92  5C0A               	subwf	(??_strcmp+1)^0,w,c
  2885  000A94  6E0B               	movwf	strcmp@r^0,c
  2886  000A96  500B               	movf	strcmp@r^0,w,c
  2887  000A98  A4D8               	btfss	status,2,c
  2888  000A9A  D007               	goto	u830
  2889  000A9C  C005  FFD9         	movff	strcmp@s1,fsr2l
  2890  000AA0  C006  FFDA         	movff	strcmp@s1+1,fsr2h
  2891  000AA4  50DF               	movf	indf2,w,c
  2892  000AA6  A4D8               	btfss	status,2,c
  2893  000AA8  D7E2               	goto	l1786
  2894  000AAA                     u830:
  2895  000AAA  500B               	movf	strcmp@r^0,w,c
  2896  000AAC  6E05               	movwf	?_strcmp^0,c
  2897  000AAE  6A06               	clrf	(?_strcmp+1)^0,c
  2898  000AB0  BE05               	btfsc	?_strcmp^0,7,c
  2899  000AB2  0606               	decf	(?_strcmp+1)^0,f,c
  2900  000AB4  0012               	return		;funcret
  2901  000AB6                     __end_of_strcmp:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _EUSART1_Read *****************
  2905 ;; Defined at:
  2906 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  readValue       1    4[COMRAM] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      unsigned char 
  2913 ;; Registers used:
  2914 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0
  2921 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2923 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2924 ;;Total ram usage:        1 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    4
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_receive_RN2903
  2931 ;;		_getch
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text11
  2936  000B36                     __ptext11:
  2937                           	callstack 0
  2938  000B36                     _EUSART1_Read:
  2939                           	callstack 25
  2940                           
  2941                           ;eusart1.c: 155: while(0 == eusart1RxCount)
  2942                           
  2943                           ;incstack = 0
  2944  000B36  504E               	movf	_eusart1RxCount^0,w,c	;volatile
  2945  000B38  B4D8               	btfsc	status,2,c
  2946  000B3A  D7FD               	goto	_EUSART1_Read
  2947                           
  2948                           ;eusart1.c: 157: };eusart1.c: 159: eusart1RxLastError = eusart1RxStatusBuffer[eusart1RxT
      +                          ail];
  2949  000B3C  0E00               	movlw	low _eusart1RxStatusBuffer
  2950  000B3E  244F               	addwf	_eusart1RxTail^0,w,c	;volatile
  2951  000B40  6ED9               	movwf	fsr2l,c
  2952  000B42  6ADA               	clrf	fsr2h,c
  2953  000B44  0E01               	movlw	high _eusart1RxStatusBuffer
  2954  000B46  22DA               	addwfc	fsr2h,f,c
  2955  000B48  50DF               	movf	indf2,w,c
  2956  000B4A  6E4D               	movwf	_eusart1RxLastError^0,c	;volatile
  2957                           
  2958                           ;eusart1.c: 161: readValue = eusart1RxBuffer[eusart1RxTail++];
  2959  000B4C  0E00               	movlw	low _eusart1RxBuffer
  2960  000B4E  244F               	addwf	_eusart1RxTail^0,w,c	;volatile
  2961  000B50  6ED9               	movwf	fsr2l,c
  2962  000B52  6ADA               	clrf	fsr2h,c
  2963  000B54  0E02               	movlw	high _eusart1RxBuffer
  2964  000B56  22DA               	addwfc	fsr2h,f,c
  2965  000B58  50DF               	movf	indf2,w,c
  2966  000B5A  6E05               	movwf	EUSART1_Read@readValue^0,c
  2967  000B5C  2A4F               	incf	_eusart1RxTail^0,f,c	;volatile
  2968                           
  2969                           ;eusart1.c: 162: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  2970  000B5E  0E3D               	movlw	61
  2971  000B60  644F               	cpfsgt	_eusart1RxTail^0,c	;volatile
  2972  000B62  D002               	goto	l1746
  2973                           
  2974                           ;eusart1.c: 163: {;eusart1.c: 164: eusart1RxTail = 0;
  2975  000B64  0E00               	movlw	0
  2976  000B66  6E4F               	movwf	_eusart1RxTail^0,c	;volatile
  2977  000B68                     l1746:
  2978                           
  2979                           ;eusart1.c: 165: };eusart1.c: 166: PIE1bits.RC1IE = 0;
  2980  000B68  9A9D               	bcf	157,5,c	;volatile
  2981                           
  2982                           ;eusart1.c: 167: eusart1RxCount--;
  2983  000B6A  064E               	decf	_eusart1RxCount^0,f,c	;volatile
  2984                           
  2985                           ;eusart1.c: 168: PIE1bits.RC1IE = 1;
  2986  000B6C  8A9D               	bsf	157,5,c	;volatile
  2987                           
  2988                           ;eusart1.c: 170: return readValue;
  2989  000B6E  5005               	movf	EUSART1_Read@readValue^0,w,c
  2990  000B70  0012               	return		;funcret
  2991  000B72                     __end_of_EUSART1_Read:
  2992                           	callstack 0
  2993                           
  2994 ;; *************** function _DELAY_milliseconds *****************
  2995 ;; Defined at:
  2996 ;;		line 27 in file "mcc_generated_files/delay.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  milliseconds    2    4[COMRAM] unsigned int 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3010 ;;      Params:         2       0       0       0       0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3012 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3013 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3014 ;;Total ram usage:        3 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    4
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_receive_RN2903
  3021 ;;		_config_RN2903
  3022 ;;		_main
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text12
  3027  000C1C                     __ptext12:
  3028                           	callstack 0
  3029  000C1C                     _DELAY_milliseconds:
  3030                           	callstack 25
  3031                           
  3032                           ;delay.c: 28: while(milliseconds--){
  3033                           
  3034                           ;incstack = 0
  3035  000C1C  D008               	goto	l1722
  3036  000C1E                     l1720:
  3037                           
  3038                           ;delay.c: 29: _delay((unsigned long)((1)*(48000000/4000.0)));
  3039  000C1E  0E10               	movlw	16
  3040  000C20  6E07               	movwf	??_DELAY_milliseconds^0,c
  3041  000C22  0E94               	movlw	148
  3042  000C24                     u1467:
  3043  000C24  2EE8               	decfsz	wreg,f,c
  3044  000C26  D7FE               	bra	u1467
  3045  000C28  2E07               	decfsz	??_DELAY_milliseconds^0,f,c
  3046  000C2A  D7FC               	bra	u1467
  3047  000C2C  D000               	nop2	
  3048  000C2E                     l1722:
  3049  000C2E  0605               	decf	DELAY_milliseconds@milliseconds^0,f,c
  3050  000C30  A0D8               	btfss	status,0,c
  3051  000C32  0606               	decf	(DELAY_milliseconds@milliseconds+1)^0,f,c
  3052  000C34  2805               	incf	DELAY_milliseconds@milliseconds^0,w,c
  3053  000C36  E1F3               	bnz	l1720
  3054  000C38  2806               	incf	(DELAY_milliseconds@milliseconds+1)^0,w,c
  3055  000C3A  B4D8               	btfsc	status,2,c
  3056  000C3C  0012               	return	
  3057  000C3E  D7EF               	goto	l1720
  3058  000C40                     __end_of_DELAY_milliseconds:
  3059                           	callstack 0
  3060                           
  3061 ;; *************** function _SYSTEM_Initialize *****************
  3062 ;; Defined at:
  3063 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3077 ;;      Params:         0       0       0       0       0       0       0       0       0
  3078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3080 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3081 ;;Total ram usage:        0 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    6
  3084 ;; This function calls:
  3085 ;;		_EUSART1_Initialize
  3086 ;;		_INTERRUPT_Initialize
  3087 ;;		_OSCILLATOR_Initialize
  3088 ;;		_PIN_MANAGER_Initialize
  3089 ;; This function is called by:
  3090 ;;		_main
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text13
  3095  000C94                     __ptext13:
  3096                           	callstack 0
  3097  000C94                     _SYSTEM_Initialize:
  3098                           	callstack 24
  3099                           
  3100                           ;mcc.c: 53: INTERRUPT_Initialize();
  3101                           
  3102                           ;incstack = 0
  3103  000C94  EC72  F006         	call	_INTERRUPT_Initialize	;wreg free
  3104                           
  3105                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  3106  000C98  EC7C  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  3107                           
  3108                           ;mcc.c: 55: OSCILLATOR_Initialize();
  3109  000C9C  EC3F  F006         	call	_OSCILLATOR_Initialize	;wreg free
  3110                           
  3111                           ;mcc.c: 56: EUSART1_Initialize();
  3112  000CA0  ECAA  F004         	call	_EUSART1_Initialize	;wreg free
  3113  000CA4  0012               	return		;funcret
  3114  000CA6                     __end_of_SYSTEM_Initialize:
  3115                           	callstack 0
  3116                           
  3117 ;; *************** function _PIN_MANAGER_Initialize *****************
  3118 ;; Defined at:
  3119 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3133 ;;      Params:         0       0       0       0       0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3136 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    4
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_SYSTEM_Initialize
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text14
  3148  000AF8                     __ptext14:
  3149                           	callstack 0
  3150  000AF8                     _PIN_MANAGER_Initialize:
  3151                           	callstack 25
  3152                           
  3153                           ;pin_manager.c: 60: LATE = 0x00;
  3154                           
  3155                           ;incstack = 0
  3156  000AF8  0E00               	movlw	0
  3157  000AFA  6E8D               	movwf	141,c	;volatile
  3158                           
  3159                           ;pin_manager.c: 61: LATD = 0x00;
  3160  000AFC  0E00               	movlw	0
  3161  000AFE  6E8C               	movwf	140,c	;volatile
  3162                           
  3163                           ;pin_manager.c: 62: LATA = 0x00;
  3164  000B00  0E00               	movlw	0
  3165  000B02  6E89               	movwf	137,c	;volatile
  3166                           
  3167                           ;pin_manager.c: 63: LATB = 0x20;
  3168  000B04  0E20               	movlw	32
  3169  000B06  6E8A               	movwf	138,c	;volatile
  3170                           
  3171                           ;pin_manager.c: 64: LATC = 0x04;
  3172  000B08  0E04               	movlw	4
  3173  000B0A  6E8B               	movwf	139,c	;volatile
  3174                           
  3175                           ;pin_manager.c: 69: TRISE = 0x07;
  3176  000B0C  0E07               	movlw	7
  3177  000B0E  6E96               	movwf	150,c	;volatile
  3178                           
  3179                           ;pin_manager.c: 70: TRISA = 0xFF;
  3180  000B10  6892               	setf	146,c	;volatile
  3181                           
  3182                           ;pin_manager.c: 71: TRISB = 0xFF;
  3183  000B12  6893               	setf	147,c	;volatile
  3184                           
  3185                           ;pin_manager.c: 72: TRISC = 0x87;
  3186  000B14  0E87               	movlw	135
  3187  000B16  6E94               	movwf	148,c	;volatile
  3188                           
  3189                           ;pin_manager.c: 73: TRISD = 0xFF;
  3190  000B18  6895               	setf	149,c	;volatile
  3191                           
  3192                           ;pin_manager.c: 78: ANSELD = 0xFF;
  3193  000B1A  010F               	movlb	15	; () banked
  3194  000B1C  695E               	setf	94,b	;volatile
  3195                           
  3196                           ;pin_manager.c: 79: ANSELC = 0x04;
  3197  000B1E  0E04               	movlw	4
  3198  000B20  6F5D               	movwf	93,b	;volatile
  3199                           
  3200                           ;pin_manager.c: 80: ANSELB = 0x1F;
  3201  000B22  0E1F               	movlw	31
  3202  000B24  6F5C               	movwf	92,b	;volatile
  3203                           
  3204                           ;pin_manager.c: 81: ANSELE = 0x07;
  3205  000B26  0E07               	movlw	7
  3206  000B28  6F5F               	movwf	95,b	;volatile
  3207                           
  3208                           ;pin_manager.c: 82: ANSELA = 0x2F;
  3209  000B2A  0E2F               	movlw	47
  3210  000B2C  6F5B               	movwf	91,b	;volatile
  3211                           
  3212                           ;pin_manager.c: 87: WPUB = 0x00;
  3213  000B2E  0E00               	movlw	0
  3214  000B30  6E85               	movwf	133,c	;volatile
  3215                           
  3216                           ; BSR set to: 15
  3217                           ;pin_manager.c: 88: INTCON2bits.nRBPU = 1;
  3218  000B32  8EF1               	bsf	241,7,c	;volatile
  3219                           
  3220                           ; BSR set to: 15
  3221  000B34  0012               	return		;funcret
  3222  000B36                     __end_of_PIN_MANAGER_Initialize:
  3223                           	callstack 0
  3224                           
  3225 ;; *************** function _OSCILLATOR_Initialize *****************
  3226 ;; Defined at:
  3227 ;;		line 59 in file "mcc_generated_files/mcc.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;		None
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;		None
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  1    wreg      void 
  3234 ;; Registers used:
  3235 ;;		wreg, status,2
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3241 ;;      Params:         0       0       0       0       0       0       0       0       0
  3242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3244 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3245 ;;Total ram usage:        0 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    4
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_SYSTEM_Initialize
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text15
  3256  000C7E                     __ptext15:
  3257                           	callstack 0
  3258  000C7E                     _OSCILLATOR_Initialize:
  3259                           	callstack 25
  3260                           
  3261                           ;mcc.c: 62: OSCCON = 0x70;
  3262                           
  3263                           ; BSR set to: 15
  3264                           ;incstack = 0
  3265  000C7E  0E70               	movlw	112
  3266  000C80  6ED3               	movwf	211,c	;volatile
  3267                           
  3268                           ;mcc.c: 64: OSCCON2 = 0x00;
  3269  000C82  0E00               	movlw	0
  3270  000C84  6ED2               	movwf	210,c	;volatile
  3271                           
  3272                           ;mcc.c: 66: OSCTUNE = 0x80;
  3273  000C86  0E80               	movlw	128
  3274  000C88  6E9B               	movwf	155,c	;volatile
  3275                           
  3276                           ;mcc.c: 68: ACTCON = 0x00;
  3277  000C8A  0E00               	movlw	0
  3278  000C8C  6EB5               	movwf	181,c	;volatile
  3279  000C8E                     l24:
  3280  000C8E  BED2               	btfsc	4050,7,c	;volatile
  3281  000C90  0012               	return	
  3282  000C92  D7FD               	goto	l24
  3283  000C94                     __end_of_OSCILLATOR_Initialize:
  3284                           	callstack 0
  3285                           
  3286 ;; *************** function _INTERRUPT_Initialize *****************
  3287 ;; Defined at:
  3288 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;		None
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      void 
  3295 ;; Registers used:
  3296 ;;		None
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3302 ;;      Params:         0       0       0       0       0       0       0       0       0
  3303 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3305 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3306 ;;Total ram usage:        0 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    4
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_SYSTEM_Initialize
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text16
  3317  000CE4                     __ptext16:
  3318                           	callstack 0
  3319  000CE4                     _INTERRUPT_Initialize:
  3320                           	callstack 25
  3321                           
  3322                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3323                           
  3324                           ;incstack = 0
  3325  000CE4  9ED0               	bcf	208,7,c	;volatile
  3326  000CE6  0012               	return		;funcret
  3327  000CE8                     __end_of_INTERRUPT_Initialize:
  3328                           	callstack 0
  3329                           
  3330 ;; *************** function _EUSART1_Initialize *****************
  3331 ;; Defined at:
  3332 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3349 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3350 ;;Total ram usage:        0 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    5
  3353 ;; This function calls:
  3354 ;;		_EUSART1_SetErrorHandler
  3355 ;;		_EUSART1_SetFramingErrorHandler
  3356 ;;		_EUSART1_SetOverrunErrorHandler
  3357 ;;		_EUSART1_SetRxInterruptHandler
  3358 ;;		_EUSART1_SetTxInterruptHandler
  3359 ;; This function is called by:
  3360 ;;		_SYSTEM_Initialize
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text17
  3365  000954                     __ptext17:
  3366                           	callstack 0
  3367  000954                     _EUSART1_Initialize:
  3368                           	callstack 24
  3369                           
  3370                           ;eusart1.c: 91: PIE1bits.RC1IE = 0;
  3371                           
  3372                           ;incstack = 0
  3373  000954  9A9D               	bcf	157,5,c	;volatile
  3374                           
  3375                           ;eusart1.c: 92: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  3376  000956  0EAC               	movlw	low _EUSART1_Receive_ISR
  3377  000958  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  3378  00095A  0E07               	movlw	high _EUSART1_Receive_ISR
  3379  00095C  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  3380  00095E  EC58  F006         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3381                           
  3382                           ;eusart1.c: 93: PIE1bits.TX1IE = 0;
  3383  000962  989D               	bcf	157,4,c	;volatile
  3384                           
  3385                           ;eusart1.c: 94: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  3386  000964  0EA8               	movlw	low _EUSART1_Transmit_ISR
  3387  000966  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  3388  000968  0E0B               	movlw	high _EUSART1_Transmit_ISR
  3389  00096A  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  3390  00096C  EC53  F006         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3391                           
  3392                           ;eusart1.c: 98: BAUDCON1 = 0x08;
  3393  000970  0E08               	movlw	8
  3394  000972  6EB8               	movwf	184,c	;volatile
  3395                           
  3396                           ;eusart1.c: 101: RCSTA1 = 0x90;
  3397  000974  0E90               	movlw	144
  3398  000976  6EAB               	movwf	171,c	;volatile
  3399                           
  3400                           ;eusart1.c: 104: TXSTA1 = 0x24;
  3401  000978  0E24               	movlw	36
  3402  00097A  6EAC               	movwf	172,c	;volatile
  3403                           
  3404                           ;eusart1.c: 107: SPBRG1 = 0xCF;
  3405  00097C  0ECF               	movlw	207
  3406  00097E  6EAF               	movwf	175,c	;volatile
  3407                           
  3408                           ;eusart1.c: 110: SPBRGH1 = 0x00;
  3409  000980  0E00               	movlw	0
  3410  000982  6EB0               	movwf	176,c	;volatile
  3411                           
  3412                           ;eusart1.c: 113: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3413  000984  0EE8               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3414  000986  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3415  000988  0E0C               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3416  00098A  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3417  00098C  EC62  F006         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3418                           
  3419                           ;eusart1.c: 114: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3420  000990  0ED8               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3421  000992  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3422  000994  0E0C               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3423  000996  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3424  000998  EC5D  F006         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3425                           
  3426                           ;eusart1.c: 115: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3427  00099C  0EDE               	movlw	low _EUSART1_DefaultErrorHandler
  3428  00099E  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3429  0009A0  0E0C               	movlw	high _EUSART1_DefaultErrorHandler
  3430  0009A2  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3431  0009A4  EC67  F006         	call	_EUSART1_SetErrorHandler	;wreg free
  3432                           
  3433                           ;eusart1.c: 117: eusart1RxLastError.status = 0;
  3434  0009A8  0E00               	movlw	0
  3435  0009AA  6E4D               	movwf	_eusart1RxLastError^0,c	;volatile
  3436                           
  3437                           ;eusart1.c: 120: eusart1TxHead = 0;
  3438  0009AC  0E00               	movlw	0
  3439  0009AE  6E53               	movwf	_eusart1TxHead^0,c	;volatile
  3440                           
  3441                           ;eusart1.c: 121: eusart1TxTail = 0;
  3442  0009B0  0E00               	movlw	0
  3443  0009B2  6E52               	movwf	_eusart1TxTail^0,c	;volatile
  3444                           
  3445                           ;eusart1.c: 122: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  3446  0009B4  0E3E               	movlw	62
  3447  0009B6  6E51               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  3448                           
  3449                           ;eusart1.c: 124: eusart1RxHead = 0;
  3450  0009B8  0E00               	movlw	0
  3451  0009BA  6E50               	movwf	_eusart1RxHead^0,c	;volatile
  3452                           
  3453                           ;eusart1.c: 125: eusart1RxTail = 0;
  3454  0009BC  0E00               	movlw	0
  3455  0009BE  6E4F               	movwf	_eusart1RxTail^0,c	;volatile
  3456                           
  3457                           ;eusart1.c: 126: eusart1RxCount = 0;
  3458  0009C0  0E00               	movlw	0
  3459  0009C2  6E4E               	movwf	_eusart1RxCount^0,c	;volatile
  3460                           
  3461                           ;eusart1.c: 129: PIE1bits.RC1IE = 1;
  3462  0009C4  8A9D               	bsf	157,5,c	;volatile
  3463  0009C6  0012               	return		;funcret
  3464  0009C8                     __end_of_EUSART1_Initialize:
  3465                           	callstack 0
  3466                           
  3467 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3468 ;; Defined at:
  3469 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3472 ;;		 -> EUSART1_Transmit_ISR(1), 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3484 ;;      Params:         2       0       0       0       0       0       0       0       0
  3485 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3486 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3487 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3488 ;;Total ram usage:        2 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    4
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_EUSART1_Initialize
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text18
  3499  000CA6                     __ptext18:
  3500                           	callstack 0
  3501  000CA6                     _EUSART1_SetTxInterruptHandler:
  3502                           	callstack 24
  3503                           
  3504                           ;eusart1.c: 286: EUSART1_TxDefaultInterruptHandler = interruptHandler;
  3505                           
  3506                           ;incstack = 0
  3507  000CA6  C005  F04B         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3508  000CAA  C006  F04C         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3509  000CAE  0012               	return		;funcret
  3510  000CB0                     __end_of_EUSART1_SetTxInterruptHandler:
  3511                           	callstack 0
  3512                           
  3513 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3514 ;; Defined at:
  3515 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3518 ;;		 -> EUSART1_Receive_ISR(1), 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;		None
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  1    wreg      void 
  3523 ;; Registers used:
  3524 ;;		wreg, status,2, status,0
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3530 ;;      Params:         2       0       0       0       0       0       0       0       0
  3531 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3533 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3534 ;;Total ram usage:        2 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    4
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_EUSART1_Initialize
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text19
  3545  000CB0                     __ptext19:
  3546                           	callstack 0
  3547  000CB0                     _EUSART1_SetRxInterruptHandler:
  3548                           	callstack 24
  3549                           
  3550                           ;eusart1.c: 290: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  3551                           
  3552                           ;incstack = 0
  3553  000CB0  C005  F049         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3554  000CB4  C006  F04A         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3555  000CB8  0012               	return		;funcret
  3556  000CBA                     __end_of_EUSART1_SetRxInterruptHandler:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3560 ;; Defined at:
  3561 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3564 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;		None
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      void 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3576 ;;      Params:         2       0       0       0       0       0       0       0       0
  3577 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3579 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3580 ;;Total ram usage:        2 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    4
  3583 ;; This function calls:
  3584 ;;		Nothing
  3585 ;; This function is called by:
  3586 ;;		_EUSART1_Initialize
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text20
  3591  000CBA                     __ptext20:
  3592                           	callstack 0
  3593  000CBA                     _EUSART1_SetOverrunErrorHandler:
  3594                           	callstack 24
  3595                           
  3596                           ;eusart1.c: 278: EUSART1_OverrunErrorHandler = interruptHandler;
  3597                           
  3598                           ;incstack = 0
  3599  000CBA  C005  F045         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3600  000CBE  C006  F046         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3601  000CC2  0012               	return		;funcret
  3602  000CC4                     __end_of_EUSART1_SetOverrunErrorHandler:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3606 ;; Defined at:
  3607 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3610 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3622 ;;      Params:         2       0       0       0       0       0       0       0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3625 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3626 ;;Total ram usage:        2 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    4
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_EUSART1_Initialize
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text21
  3637  000CC4                     __ptext21:
  3638                           	callstack 0
  3639  000CC4                     _EUSART1_SetFramingErrorHandler:
  3640                           	callstack 24
  3641                           
  3642                           ;eusart1.c: 274: EUSART1_FramingErrorHandler = interruptHandler;
  3643                           
  3644                           ;incstack = 0
  3645  000CC4  C005  F047         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3646  000CC8  C006  F048         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3647  000CCC  0012               	return		;funcret
  3648  000CCE                     __end_of_EUSART1_SetFramingErrorHandler:
  3649                           	callstack 0
  3650                           
  3651 ;; *************** function _EUSART1_SetErrorHandler *****************
  3652 ;; Defined at:
  3653 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3656 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3668 ;;      Params:         2       0       0       0       0       0       0       0       0
  3669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3671 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3672 ;;Total ram usage:        2 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    4
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_EUSART1_Initialize
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text22
  3683  000CCE                     __ptext22:
  3684                           	callstack 0
  3685  000CCE                     _EUSART1_SetErrorHandler:
  3686                           	callstack 24
  3687                           
  3688                           ;eusart1.c: 282: EUSART1_ErrorHandler = interruptHandler;
  3689                           
  3690                           ;incstack = 0
  3691  000CCE  C005  F043         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3692  000CD2  C006  F044         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3693  000CD6  0012               	return		;funcret
  3694  000CD8                     __end_of_EUSART1_SetErrorHandler:
  3695                           	callstack 0
  3696                           
  3697 ;; *************** function _INTERRUPT_InterruptManager *****************
  3698 ;; Defined at:
  3699 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3713 ;;      Params:         0       0       0       0       0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3715 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3716 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3717 ;;Total ram usage:        4 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    3
  3720 ;; This function calls:
  3721 ;;		Absolute function
  3722 ;;		_EUSART1_Receive_ISR
  3723 ;;		_EUSART1_Transmit_ISR
  3724 ;; This function is called by:
  3725 ;;		Interrupt level 2
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	intcode
  3730  000008                     __pintcode:
  3731                           	callstack 0
  3732  000008                     _INTERRUPT_InterruptManager:
  3733                           	callstack 24
  3734                           
  3735                           ;incstack = 0
  3736  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3737  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  3738  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3739  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  3740  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  3741                           
  3742                           ;interrupt_manager.c: 61: if(INTCONbits.PEIE == 1)
  3743  00001A  ACF2               	btfss	242,6,c	;volatile
  3744  00001C  D01A               	goto	i2u144_49
  3745                           
  3746                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: if(PIE1bits.TX1IE == 1 && PIR1bits.
      +                          TX1IF == 1)
  3747  00001E  B89D               	btfsc	157,4,c	;volatile
  3748  000020  A89E               	btfss	158,4,c	;volatile
  3749  000022  D008               	goto	i2l257
  3750                           
  3751                           ;interrupt_manager.c: 64: {;interrupt_manager.c: 65: EUSART1_TxDefaultInterruptHandler()
      +                          ;
  3752  000024  D801               	call	i2u141_48
  3753  000026  D015               	goto	i2u144_49
  3754  000028                     i2u141_48:
  3755  000028  0005               	push	
  3756  00002A  6EFA               	movwf	pclath,c
  3757  00002C  504B               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  3758  00002E  6EFD               	movwf	tosl,c
  3759  000030  504C               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  3760  000032  D00A               	goto	L1
  3761  000034                     i2l257:
  3762                           
  3763                           ;interrupt_manager.c: 67: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  3764  000034  BA9D               	btfsc	157,5,c	;volatile
  3765  000036  AA9E               	btfss	158,5,c	;volatile
  3766  000038  D00C               	goto	i2u144_49
  3767                           
  3768                           ;interrupt_manager.c: 68: {;interrupt_manager.c: 69: EUSART1_RxDefaultInterruptHandler()
      +                          ;
  3769  00003A  D801               	call	i2u144_48
  3770  00003C  D00A               	goto	i2u144_49
  3771  00003E                     i2u144_48:
  3772  00003E  0005               	push	
  3773  000040  6EFA               	movwf	pclath,c
  3774  000042  5049               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  3775  000044  6EFD               	movwf	tosl,c
  3776  000046  504A               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  3777  000048                     L1:
  3778  000048  6EFE               	movwf	tosh,c
  3779  00004A  50F8               	movf	tblptru,w,c
  3780  00004C  6EFF               	movwf	tosu,c
  3781  00004E  50FA               	movf	pclath,w,c
  3782  000050  0012               	return		;indir
  3783  000052                     i2u144_49:
  3784                           
  3785                           ;interrupt_manager.c: 74: };interrupt_manager.c: 75: }
  3786                           
  3787                           ;interrupt_manager.c: 70: }
  3788  000052  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  3789  000056  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  3790  00005A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3791  00005E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3792  000062  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3793  000064  0011               	retfie		f
  3794  000066                     __end_of_INTERRUPT_InterruptManager:
  3795                           	callstack 0
  3796                           
  3797 ;; *************** function _EUSART1_Transmit_ISR *****************
  3798 ;; Defined at:
  3799 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;		None
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;		None
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      void 
  3806 ;; Registers used:
  3807 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3813 ;;      Params:         0       0       0       0       0       0       0       0       0
  3814 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3816 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3817 ;;Total ram usage:        0 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_EUSART1_Initialize
  3823 ;;		_INTERRUPT_InterruptManager
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text24
  3828  000BA8                     __ptext24:
  3829                           	callstack 0
  3830  000BA8                     _EUSART1_Transmit_ISR:
  3831                           	callstack 26
  3832                           
  3833                           ;eusart1.c: 210: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  3834                           
  3835                           ;incstack = 0
  3836  000BA8  0E3E               	movlw	62
  3837  000BAA  6051               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  3838  000BAC  D010               	goto	i2l198
  3839                           
  3840                           ;eusart1.c: 211: {;eusart1.c: 212: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  3841  000BAE  0E3E               	movlw	low _eusart1TxBuffer
  3842  000BB0  2452               	addwf	_eusart1TxTail^0,w,c	;volatile
  3843  000BB2  6ED9               	movwf	fsr2l,c
  3844  000BB4  6ADA               	clrf	fsr2h,c
  3845  000BB6  0E01               	movlw	high _eusart1TxBuffer
  3846  000BB8  22DA               	addwfc	fsr2h,f,c
  3847  000BBA  50DF               	movf	indf2,w,c
  3848  000BBC  6EAD               	movwf	173,c	;volatile
  3849  000BBE  2A52               	incf	_eusart1TxTail^0,f,c	;volatile
  3850                           
  3851                           ;eusart1.c: 213: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  3852  000BC0  0E3D               	movlw	61
  3853  000BC2  6452               	cpfsgt	_eusart1TxTail^0,c	;volatile
  3854  000BC4  D002               	goto	i2l2076
  3855                           
  3856                           ;eusart1.c: 214: {;eusart1.c: 215: eusart1TxTail = 0;
  3857  000BC6  0E00               	movlw	0
  3858  000BC8  6E52               	movwf	_eusart1TxTail^0,c	;volatile
  3859  000BCA                     i2l2076:
  3860                           
  3861                           ;eusart1.c: 216: };eusart1.c: 217: eusart1TxBufferRemaining++;
  3862  000BCA  2A51               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  3863                           
  3864                           ;eusart1.c: 218: }
  3865  000BCC  0012               	return	
  3866  000BCE                     i2l198:
  3867                           
  3868                           ;eusart1.c: 219: else;eusart1.c: 220: {;eusart1.c: 221: PIE1bits.TX1IE = 0;
  3869  000BCE  989D               	bcf	157,4,c	;volatile
  3870  000BD0  0012               	return		;funcret
  3871  000BD2                     __end_of_EUSART1_Transmit_ISR:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function _EUSART1_Receive_ISR *****************
  3875 ;; Defined at:
  3876 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3893 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3894 ;;Total ram usage:        0 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    2
  3897 ;; This function calls:
  3898 ;;		Absolute function
  3899 ;;		_EUSART1_DefaultErrorHandler
  3900 ;;		_EUSART1_DefaultFramingErrorHandler
  3901 ;;		_EUSART1_DefaultOverrunErrorHandler
  3902 ;;		_EUSART1_RxDataHandler
  3903 ;; This function is called by:
  3904 ;;		_EUSART1_Initialize
  3905 ;;		_INTERRUPT_InterruptManager
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text25
  3910  0007AC                     __ptext25:
  3911                           	callstack 0
  3912  0007AC                     _EUSART1_Receive_ISR:
  3913                           	callstack 24
  3914                           
  3915                           ;eusart1.c: 228: eusart1RxStatusBuffer[eusart1RxHead].status = 0;
  3916                           
  3917                           ;incstack = 0
  3918  0007AC  0E00               	movlw	low _eusart1RxStatusBuffer
  3919  0007AE  2450               	addwf	_eusart1RxHead^0,w,c	;volatile
  3920  0007B0  6ED9               	movwf	fsr2l,c
  3921  0007B2  6ADA               	clrf	fsr2h,c
  3922  0007B4  0E01               	movlw	high _eusart1RxStatusBuffer
  3923  0007B6  22DA               	addwfc	fsr2h,f,c
  3924  0007B8  0E00               	movlw	0
  3925  0007BA  6EDF               	movwf	indf2,c
  3926                           
  3927                           ;eusart1.c: 230: if(RCSTA1bits.FERR){
  3928  0007BC  A4AB               	btfss	171,2,c	;volatile
  3929  0007BE  D014               	goto	i2u121_49
  3930                           
  3931                           ;eusart1.c: 231: eusart1RxStatusBuffer[eusart1RxHead].ferr = 1;
  3932  0007C0  0E00               	movlw	low _eusart1RxStatusBuffer
  3933  0007C2  2450               	addwf	_eusart1RxHead^0,w,c	;volatile
  3934  0007C4  6ED9               	movwf	fsr2l,c
  3935  0007C6  6ADA               	clrf	fsr2h,c
  3936  0007C8  0E01               	movlw	high _eusart1RxStatusBuffer
  3937  0007CA  22DA               	addwfc	fsr2h,f,c
  3938  0007CC  0101               	movlb	1	; () banked
  3939  0007CE  82DF               	bsf	indf2,1,c
  3940                           
  3941                           ; BSR set to: 1
  3942                           ;eusart1.c: 232: EUSART1_FramingErrorHandler();
  3943  0007D0  D801               	call	i2u121_48
  3944  0007D2  D00A               	goto	i2u121_49
  3945  0007D4                     i2u121_48:
  3946  0007D4  0005               	push	
  3947  0007D6  6EFA               	movwf	pclath,c
  3948  0007D8  5047               	movf	_EUSART1_FramingErrorHandler^0,w,c
  3949  0007DA  6EFD               	movwf	tosl,c
  3950  0007DC  5048               	movf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  3951  0007DE  6EFE               	movwf	tosh,c
  3952  0007E0  50F8               	movf	tblptru,w,c
  3953  0007E2  6EFF               	movwf	tosu,c
  3954  0007E4  50FA               	movf	pclath,w,c
  3955  0007E6  0012               	return		;indir
  3956  0007E8                     i2u121_49:
  3957                           
  3958                           ;eusart1.c: 233: };eusart1.c: 235: if(RCSTA1bits.OERR){
  3959  0007E8  A2AB               	btfss	171,1,c	;volatile
  3960  0007EA  D014               	goto	i2u123_49
  3961                           
  3962                           ;eusart1.c: 236: eusart1RxStatusBuffer[eusart1RxHead].oerr = 1;
  3963  0007EC  0E00               	movlw	low _eusart1RxStatusBuffer
  3964  0007EE  2450               	addwf	_eusart1RxHead^0,w,c	;volatile
  3965  0007F0  6ED9               	movwf	fsr2l,c
  3966  0007F2  6ADA               	clrf	fsr2h,c
  3967  0007F4  0E01               	movlw	high _eusart1RxStatusBuffer
  3968  0007F6  22DA               	addwfc	fsr2h,f,c
  3969  0007F8  0101               	movlb	1	; () banked
  3970  0007FA  84DF               	bsf	indf2,2,c
  3971                           
  3972                           ; BSR set to: 1
  3973                           ;eusart1.c: 237: EUSART1_OverrunErrorHandler();
  3974  0007FC  D801               	call	i2u123_48
  3975  0007FE  D00A               	goto	i2u123_49
  3976  000800                     i2u123_48:
  3977  000800  0005               	push	
  3978  000802  6EFA               	movwf	pclath,c
  3979  000804  5045               	movf	_EUSART1_OverrunErrorHandler^0,w,c
  3980  000806  6EFD               	movwf	tosl,c
  3981  000808  5046               	movf	(_EUSART1_OverrunErrorHandler+1)^0,w,c
  3982  00080A  6EFE               	movwf	tosh,c
  3983  00080C  50F8               	movf	tblptru,w,c
  3984  00080E  6EFF               	movwf	tosu,c
  3985  000810  50FA               	movf	pclath,w,c
  3986  000812  0012               	return		;indir
  3987  000814                     i2u123_49:
  3988                           
  3989                           ;eusart1.c: 238: };eusart1.c: 240: if(eusart1RxStatusBuffer[eusart1RxHead].status){
  3990  000814  0E00               	movlw	low _eusart1RxStatusBuffer
  3991  000816  2450               	addwf	_eusart1RxHead^0,w,c	;volatile
  3992  000818  6ED9               	movwf	fsr2l,c
  3993  00081A  6ADA               	clrf	fsr2h,c
  3994  00081C  0E01               	movlw	high _eusart1RxStatusBuffer
  3995  00081E  22DA               	addwfc	fsr2h,f,c
  3996  000820  50DF               	movf	indf2,w,c
  3997  000822  B4D8               	btfsc	status,2,c
  3998  000824  D00C               	goto	i2l2096
  3999                           
  4000                           ;eusart1.c: 241: EUSART1_ErrorHandler();
  4001  000826  D801               	call	i2u125_48
  4002  000828  0012               	return	
  4003  00082A                     i2u125_48:
  4004  00082A  0005               	push	
  4005  00082C  6EFA               	movwf	pclath,c
  4006  00082E  5043               	movf	_EUSART1_ErrorHandler^0,w,c
  4007  000830  6EFD               	movwf	tosl,c
  4008  000832  5044               	movf	(_EUSART1_ErrorHandler+1)^0,w,c
  4009  000834  6EFE               	movwf	tosh,c
  4010  000836  50F8               	movf	tblptru,w,c
  4011  000838  6EFF               	movwf	tosu,c
  4012  00083A  50FA               	movf	pclath,w,c
  4013  00083C  0012               	return		;indir
  4014  00083E                     i2l2096:
  4015                           
  4016                           ;eusart1.c: 243: EUSART1_RxDataHandler();
  4017  00083E  EC20  F006         	call	_EUSART1_RxDataHandler	;wreg free
  4018  000842  0012               	return		;funcret
  4019  000844                     __end_of_EUSART1_Receive_ISR:
  4020                           	callstack 0
  4021                           
  4022 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  4023 ;; Defined at:
  4024 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		None
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4038 ;;      Params:         0       0       0       0       0       0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4041 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4042 ;;Total ram usage:        0 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_EUSART1_Initialize
  4048 ;;		_EUSART1_Receive_ISR
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           	psect	text26
  4053  000CD8                     __ptext26:
  4054                           	callstack 0
  4055  000CD8                     _EUSART1_DefaultOverrunErrorHandler:
  4056                           	callstack 25
  4057                           
  4058                           ;eusart1.c: 264: RCSTA1bits.CREN = 0;
  4059                           
  4060                           ;incstack = 0
  4061  000CD8  98AB               	bcf	171,4,c	;volatile
  4062                           
  4063                           ;eusart1.c: 265: RCSTA1bits.CREN = 1;
  4064  000CDA  88AB               	bsf	171,4,c	;volatile
  4065  000CDC  0012               	return		;funcret
  4066  000CDE                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  4070 ;; Defined at:
  4071 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;		None
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		None
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4085 ;;      Params:         0       0       0       0       0       0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4088 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4089 ;;Total ram usage:        0 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_EUSART1_Initialize
  4095 ;;		_EUSART1_Receive_ISR
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text27
  4100  000CE8                     __ptext27:
  4101                           	callstack 0
  4102  000CE8                     _EUSART1_DefaultFramingErrorHandler:
  4103                           	callstack 25
  4104                           
  4105                           ;incstack = 0
  4106  000CE8  0012               	return		;funcret
  4107  000CEA                     __end_of_EUSART1_DefaultFramingErrorHandler:
  4108                           	callstack 0
  4109                           
  4110 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  4111 ;; Defined at:
  4112 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4126 ;;      Params:         0       0       0       0       0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4129 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    1
  4133 ;; This function calls:
  4134 ;;		_EUSART1_RxDataHandler
  4135 ;; This function is called by:
  4136 ;;		_EUSART1_Initialize
  4137 ;;		_EUSART1_Receive_ISR
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text28
  4142  000CDE                     __ptext28:
  4143                           	callstack 0
  4144  000CDE                     _EUSART1_DefaultErrorHandler:
  4145                           	callstack 24
  4146                           
  4147                           ;eusart1.c: 270: EUSART1_RxDataHandler();
  4148                           
  4149                           ;incstack = 0
  4150  000CDE  EC20  F006         	call	_EUSART1_RxDataHandler	;wreg free
  4151  000CE2  0012               	return		;funcret
  4152  000CE4                     __end_of_EUSART1_DefaultErrorHandler:
  4153                           	callstack 0
  4154                           
  4155 ;; *************** function _EUSART1_RxDataHandler *****************
  4156 ;; Defined at:
  4157 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4171 ;;      Params:         0       0       0       0       0       0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4174 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4175 ;;Total ram usage:        0 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_EUSART1_Receive_ISR
  4181 ;;		_EUSART1_DefaultErrorHandler
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text29
  4186  000C40                     __ptext29:
  4187                           	callstack 0
  4188  000C40                     _EUSART1_RxDataHandler:
  4189                           	callstack 25
  4190                           
  4191                           ;eusart1.c: 251: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  4192                           
  4193                           ;incstack = 0
  4194  000C40  0E00               	movlw	low _eusart1RxBuffer
  4195  000C42  2450               	addwf	_eusart1RxHead^0,w,c	;volatile
  4196  000C44  6ED9               	movwf	fsr2l,c
  4197  000C46  6ADA               	clrf	fsr2h,c
  4198  000C48  0E02               	movlw	high _eusart1RxBuffer
  4199  000C4A  22DA               	addwfc	fsr2h,f,c
  4200  000C4C  CFAE FFDF          	movff	4014,indf2	;volatile
  4201  000C50  2A50               	incf	_eusart1RxHead^0,f,c	;volatile
  4202                           
  4203                           ;eusart1.c: 252: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  4204  000C52  0E3D               	movlw	61
  4205  000C54  6450               	cpfsgt	_eusart1RxHead^0,c	;volatile
  4206  000C56  D002               	goto	i2l1782
  4207                           
  4208                           ;eusart1.c: 253: {;eusart1.c: 254: eusart1RxHead = 0;
  4209  000C58  0E00               	movlw	0
  4210  000C5A  6E50               	movwf	_eusart1RxHead^0,c	;volatile
  4211  000C5C                     i2l1782:
  4212                           
  4213                           ;eusart1.c: 255: };eusart1.c: 256: eusart1RxCount++;
  4214  000C5C  2A4E               	incf	_eusart1RxCount^0,f,c	;volatile
  4215  000C5E  0012               	return		;funcret
  4216  000C60                     __end_of_EUSART1_RxDataHandler:
  4217                           	callstack 0
  4218                           
  4219                           	psect	text30
  4220  000000                     __ptext30:
  4221                           	callstack 0
  4222                           
  4223                           	psect	rparam
  4224  0000                     
  4225                           	psect	temp
  4226  000054                     btemp:
  4227                           	callstack 0
  4228  000054                     	ds	1
  4229  0000                     int$flags	set	btemp
  4230  0000                     wtemp8	set	btemp+1
  4231  0000                     ttemp5	set	btemp+1
  4232  0000                     ttemp6	set	btemp+4
  4233  0000                     ttemp7	set	btemp+8
  4234                           
  4235                           	psect	idloc
  4236                           
  4237                           ;Config register IDLOC0 @ 0x200000
  4238                           ;	unspecified, using default values
  4239  200000                     	org	2097152
  4240  200000  FF                 	db	255
  4241                           
  4242                           ;Config register IDLOC1 @ 0x200001
  4243                           ;	unspecified, using default values
  4244  200001                     	org	2097153
  4245  200001  FF                 	db	255
  4246                           
  4247                           ;Config register IDLOC2 @ 0x200002
  4248                           ;	unspecified, using default values
  4249  200002                     	org	2097154
  4250  200002  FF                 	db	255
  4251                           
  4252                           ;Config register IDLOC3 @ 0x200003
  4253                           ;	unspecified, using default values
  4254  200003                     	org	2097155
  4255  200003  FF                 	db	255
  4256                           
  4257                           ;Config register IDLOC4 @ 0x200004
  4258                           ;	unspecified, using default values
  4259  200004                     	org	2097156
  4260  200004  FF                 	db	255
  4261                           
  4262                           ;Config register IDLOC5 @ 0x200005
  4263                           ;	unspecified, using default values
  4264  200005                     	org	2097157
  4265  200005  FF                 	db	255
  4266                           
  4267                           ;Config register IDLOC6 @ 0x200006
  4268                           ;	unspecified, using default values
  4269  200006                     	org	2097158
  4270  200006  FF                 	db	255
  4271                           
  4272                           ;Config register IDLOC7 @ 0x200007
  4273                           ;	unspecified, using default values
  4274  200007                     	org	2097159
  4275  200007  FF                 	db	255
  4276                           
  4277                           	psect	config
  4278                           
  4279                           ;Config register CONFIG1L @ 0x300000
  4280                           ;	PLL Selection
  4281                           ;	PLLSEL = PLL3X, 3x clock multiplier
  4282                           ;	PLL Enable Configuration bit
  4283                           ;	CFGPLLEN = ON, PLL Enabled
  4284                           ;	CPU System Clock Postscaler
  4285                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  4286                           ;	Low Speed USB mode with 48 MHz system clock
  4287                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  4288  300000                     	org	3145728
  4289  300000  23                 	db	35
  4290                           
  4291                           ;Config register CONFIG1H @ 0x300001
  4292                           ;	Oscillator Selection
  4293                           ;	FOSC = INTOSCIO, Internal oscillator
  4294                           ;	Primary Oscillator Shutdown
  4295                           ;	PCLKEN = ON, Primary oscillator enabled
  4296                           ;	Fail-Safe Clock Monitor
  4297                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4298                           ;	Internal/External Oscillator Switchover
  4299                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4300  300001                     	org	3145729
  4301  300001  28                 	db	40
  4302                           
  4303                           ;Config register CONFIG2L @ 0x300002
  4304                           ;	Power-up Timer Enable
  4305                           ;	nPWRTEN = OFF, Power up timer disabled
  4306                           ;	Brown-out Reset Enable
  4307                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  4308                           ;	Brown-out Reset Voltage
  4309                           ;	BORV = 190, BOR set to 1.9V nominal
  4310                           ;	Low-Power Brown-out Reset
  4311                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  4312  300002                     	org	3145730
  4313  300002  5F                 	db	95
  4314                           
  4315                           ;Config register CONFIG2H @ 0x300003
  4316                           ;	Watchdog Timer Enable bits
  4317                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  4318                           ;	Watchdog Timer Postscaler
  4319                           ;	WDTPS = 32768, 1:32768
  4320  300003                     	org	3145731
  4321  300003  3C                 	db	60
  4322                           
  4323                           ; Padding undefined space
  4324  300004                     	org	3145732
  4325  300004  FF                 	db	255
  4326                           
  4327                           ;Config register CONFIG3H @ 0x300005
  4328                           ;	CCP2 MUX bit
  4329                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4330                           ;	PORTB A/D Enable bit
  4331                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4332                           ;	Timer3 Clock Input MUX bit
  4333                           ;	T3CMX = RC0, T3CKI function is on RC0
  4334                           ;	SDO Output MUX bit
  4335                           ;	SDOMX = RB3, SDO function is on RB3
  4336                           ;	Master Clear Reset Pin Enable
  4337                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4338  300005                     	org	3145733
  4339  300005  D3                 	db	211
  4340                           
  4341                           ;Config register CONFIG4L @ 0x300006
  4342                           ;	Stack Full/Underflow Reset
  4343                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4344                           ;	Single-Supply ICSP Enable bit
  4345                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4346                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4347                           ;	ICPRT = OFF, ICPORT disabled
  4348                           ;	Extended Instruction Set Enable bit
  4349                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4350                           ;	Background Debugger Enable bit
  4351                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4352  300006                     	org	3145734
  4353  300006  85                 	db	133
  4354                           
  4355                           ; Padding undefined space
  4356  300007                     	org	3145735
  4357  300007  FF                 	db	255
  4358                           
  4359                           ;Config register CONFIG5L @ 0x300008
  4360                           ;	Block 0 Code Protect
  4361                           ;	CP0 = OFF, Block 0 is not code-protected
  4362                           ;	Block 1 Code Protect
  4363                           ;	CP1 = OFF, Block 1 is not code-protected
  4364                           ;	Block 2 Code Protect
  4365                           ;	CP2 = OFF, Block 2 is not code-protected
  4366                           ;	Block 3 Code Protect
  4367                           ;	CP3 = OFF, Block 3 is not code-protected
  4368  300008                     	org	3145736
  4369  300008  0F                 	db	15
  4370                           
  4371                           ;Config register CONFIG5H @ 0x300009
  4372                           ;	Boot Block Code Protect
  4373                           ;	CPB = OFF, Boot block is not code-protected
  4374                           ;	Data EEPROM Code Protect
  4375                           ;	CPD = OFF, Data EEPROM is not code-protected
  4376  300009                     	org	3145737
  4377  300009  C0                 	db	192
  4378                           
  4379                           ;Config register CONFIG6L @ 0x30000A
  4380                           ;	Block 0 Write Protect
  4381                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4382                           ;	Block 1 Write Protect
  4383                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4384                           ;	Block 2 Write Protect
  4385                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4386                           ;	Block 3 Write Protect
  4387                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4388  30000A                     	org	3145738
  4389  30000A  0F                 	db	15
  4390                           
  4391                           ;Config register CONFIG6H @ 0x30000B
  4392                           ;	Configuration Registers Write Protect
  4393                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4394                           ;	Boot Block Write Protect
  4395                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4396                           ;	Data EEPROM Write Protect
  4397                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4398  30000B                     	org	3145739
  4399  30000B  E0                 	db	224
  4400                           
  4401                           ;Config register CONFIG7L @ 0x30000C
  4402                           ;	Block 0 Table Read Protect
  4403                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4404                           ;	Block 1 Table Read Protect
  4405                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4406                           ;	Block 2 Table Read Protect
  4407                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4408                           ;	Block 3 Table Read Protect
  4409                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4410  30000C                     	org	3145740
  4411  30000C  0F                 	db	15
  4412                           
  4413                           ;Config register CONFIG7H @ 0x30000D
  4414                           ;	Boot Block Table Read Protect
  4415                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4416  30000D                     	org	3145741
  4417  30000D  40                 	db	64
  4418                           tosu	equ	0xFFF
  4419                           tosh	equ	0xFFE
  4420                           tosl	equ	0xFFD
  4421                           stkptr	equ	0xFFC
  4422                           pclatu	equ	0xFFB
  4423                           pclath	equ	0xFFA
  4424                           pcl	equ	0xFF9
  4425                           tblptru	equ	0xFF8
  4426                           tblptrh	equ	0xFF7
  4427                           tblptrl	equ	0xFF6
  4428                           tablat	equ	0xFF5
  4429                           prodh	equ	0xFF4
  4430                           prodl	equ	0xFF3
  4431                           indf0	equ	0xFEF
  4432                           postinc0	equ	0xFEE
  4433                           postdec0	equ	0xFED
  4434                           preinc0	equ	0xFEC
  4435                           plusw0	equ	0xFEB
  4436                           fsr0h	equ	0xFEA
  4437                           fsr0l	equ	0xFE9
  4438                           wreg	equ	0xFE8
  4439                           indf1	equ	0xFE7
  4440                           postinc1	equ	0xFE6
  4441                           postdec1	equ	0xFE5
  4442                           preinc1	equ	0xFE4
  4443                           plusw1	equ	0xFE3
  4444                           fsr1h	equ	0xFE2
  4445                           fsr1l	equ	0xFE1
  4446                           bsr	equ	0xFE0
  4447                           indf2	equ	0xFDF
  4448                           postinc2	equ	0xFDE
  4449                           postdec2	equ	0xFDD
  4450                           preinc2	equ	0xFDC
  4451                           plusw2	equ	0xFDB
  4452                           fsr2h	equ	0xFDA
  4453                           fsr2l	equ	0xFD9
  4454                           status	equ	0xFD8

Data Sizes:
    Strings     438
    Constant    18
    Data        36
    BSS         283
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     66      83
    BANK0           160    119     155
    BANK1           256      0     204
    BANK2           256      0      62
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_33(CODE[5]), STR_31(CODE[5]), STR_29(CODE[5]), STR_27(CODE[5]), 
		 -> STR_25(CODE[5]), STR_23(CODE[5]), STR_21(CODE[5]), STR_19(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[5]), STR_13(CODE[5]), STR_11(CODE[5]), 
		 -> STR_9(CODE[5]), STR_7(CODE[5]), STR_5(CODE[5]), STR_3(CODE[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 80
		 -> receive_RN2903@rx_data(BANK0[80]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_16(CODE[83]), STR_14(CODE[83]), STR_12(CODE[35]), STR_10(CODE[22]), 
		 -> STR_8(CODE[18]), STR_6(CODE[27]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 80
		 -> tx_buf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    receive_RN2903@data	PTR unsigned char  size(2) Largest target is 5
		 -> STR_33(CODE[5]), STR_31(CODE[5]), STR_29(CODE[5]), STR_27(CODE[5]), 
		 -> STR_25(CODE[5]), STR_23(CODE[5]), STR_21(CODE[5]), STR_19(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[5]), STR_13(CODE[5]), STR_11(CODE[5]), 
		 -> STR_9(CODE[5]), STR_7(CODE[5]), STR_5(CODE[5]), STR_3(CODE[5]), 

    send_RN2903@data	PTR unsigned char  size(2) Largest target is 80
		 -> STR_32(CODE[26]), STR_30(CODE[15]), STR_28(CODE[17]), STR_26(CODE[13]), 
		 -> STR_24(CODE[15]), STR_22(CODE[14]), STR_20(CODE[11]), STR_18(CODE[15]), 
		 -> tx_buf(BANK1[80]), STR_4(CODE[25]), STR_2(CODE[14]), STR_1(CODE[12]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _config_RN2903->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _send_RN2903->_EUSART1_Write
    _receive_RN2903->_strcmp
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_config_RN2903
    _config_RN2903->_receive_RN2903

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14443
                 _DELAY_milliseconds
                  _SYSTEM_Initialize
                      _config_RN2903
                     _receive_RN2903
                        _send_RN2903
 ---------------------------------------------------------------------------------
 (1) _config_RN2903                                       37    37      0    9037
                                             82 BANK0     37    37      0
                 _DELAY_milliseconds
                     _receive_RN2903
                        _send_RN2903
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             59    23     36    3225
                                             16 COMRAM    50    14     36
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                             11 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _send_RN2903                                          8     6      2    1426
                                              5 COMRAM     8     6      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _receive_RN2903                                      89    87      2    2556
                                             11 COMRAM     7     5      2
                                              0 BANK0     82    82      0
                 _DELAY_milliseconds
                       _EUSART1_Read
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               7     3      4     243
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DELAY_milliseconds                                   3     1      2     934
                                              4 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_milliseconds
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _config_RN2903
     _DELAY_milliseconds
     _receive_RN2903
       _DELAY_milliseconds
       _EUSART1_Read
       _strcmp
     _send_RN2903
       _EUSART1_Write
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _receive_RN2903
     _DELAY_milliseconds
     _EUSART1_Read
     _strcmp
   _send_RN2903
     _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      3E      10       24.2%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      CC       8       79.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      9B       5       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     42      53       1       88.3%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F8       6        0.0%
DATA                 0      0     1F8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed May 27 12:01:29 2020

                      _eusart1TxBufferRemaining 0051                                              l24 0C8E  
                           ___wmul@multiplicand 0007                                             l186 0B84  
                                           l380 0160                                             l909 0AEE  
                                           l899 0A62                                             u900 0AD0  
                                           u830 0AAA                                             u920 0908  
                                           u930 094C                                             u870 0A3C  
                                           u927 08FE                                             u937 0942  
                    __end_of_DELAY_milliseconds 0C40                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                               send_RN2903@data 0006                                            l2002 0256  
                                          l2012 027E                                            l2020 029E  
                                          l2004 025E                                            l2050 038C  
                                          l2034 02E0                                            l2114 041A  
                                          l2202 0714                                            l2044 036C  
                                          l2036 02E6                                            l2038 032A  
                                          l2046 037C                                            l1720 0C1E  
                                          l1722 0C2E                                            l1820 0A30  
                                          l1804 0C76                                            l1822 0A38  
                                          l1832 0A58                                            l1840 0AC4  
                                          l1920 008E                                            l1746 0B68  
                                          l1906 08C2                                            l1770 0BA2  
                                          l1842 0ACC                                            l1922 009C  
                                          l1914 0074                                            l1772 0BA4  
                                          l1756 0B74                                            l1940 012E  
                                          l1932 00D0                                            l1926 00A2  
                                          l1848 0AE4                                            l1960 01A8  
                                          l1944 0132                                            l1786 0A6E  
                                          l1890 084E                                            l1882 08DC  
                                          l1788 0A76                                            l1980 01DC  
                                          l1956 018E                                            l1886 0910  
                                          l1974 01D8                                            l1966 01AC  
                                          l1990 0208                                            l1992 0218  
                                          l1998 0232                                            STR_1 7FE3  
                                          STR_2 7FC8                                            STR_3 7FFA  
                                          STR_4 7F47                                            STR_5 7FFA  
                                          STR_6 7F12                                            STR_7 7FFA  
                                          STR_8 7F76                                            STR_9 7FFA  
                                          u1130 02A6                                            u1140 02C4  
                                          u1301 04DC                                            u1311 04EE  
                                          u1160 0394                                            u1320 053E  
                                          u1170 03AC                                            u1330 05D0  
                                          u1340 0662                                            u1260 0412  
                                          _LATA 000F89                                            u1350 0680  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u1360 069E                                            u1280 0486  
                                          _LATD 000F8C                                            _LATE 000F8D  
                                          u1370 06EC                                            u1290 04C0  
                                          u1450 079C                                            u1467 0C24  
                                          _WPUB 000F85                                   _EUSART1_Write 0B72  
                                          _main 06FC                                   ?_EUSART1_Read 0001  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          btemp 0054                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0066  
                          config_RN2903@devaddr 00D2                            config_RN2903@appskey 00B2  
                                  ___param_bank 000000                                send_RN2903@count 000C  
                          config_RN2903@nwkskey 00C2                  __size_of_OSCILLATOR_Initialize 0016  
                               ??_config_RN2903 0043                   __end_of_OSCILLATOR_Initialize 0C94  
                         _eusart1RxStatusBuffer 0100                                           ?_main 0001  
                                         STR_10 7F60                                           STR_11 7FFA  
                                         STR_20 7FEF                                           STR_12 7EEF  
                                         STR_21 7FFA                                           STR_13 7FFA  
                                         STR_30 7FAA                                           STR_22 7FC8  
                                         STR_14 7E9C                                           STR_31 7FFA  
                                         STR_23 7FFA                                           STR_15 7FFA  
                                         STR_24 7FB9                                           STR_32 7F2D  
                                         STR_16 7E49                                           STR_33 7FFA  
                                         STR_25 7FFA                                           STR_17 7FFA  
                                         STR_26 7FD6                                           STR_18 7FAA  
                                         STR_34 7F88                                           STR_27 7FFA  
                                         STR_19 7FFA                                           STR_28 7F99  
                                         STR_29 7FFA                                 __end_of___lwdiv 0A6C  
                               __end_of___lwmod 0AF8                                           i2l257 0034  
                                         i2l198 0BCE                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                          _EUSART1_Transmit_ISR 0BA8                                 __end_of_dpowers 7E41  
                               __end_of_isdigit 0C7E                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 0005                                           plusw1 000FE3  
                                         plusw2 000FDB                                           ttemp5 0055  
                                         ttemp6 0058                                           ttemp7 005C  
                                         status 000FD8                                           wtemp8 0055  
                               __end_of_sprintf 03BA      __end_of_EUSART1_DefaultFramingErrorHandler 0CEA  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 0CE8  
                               __initialization 09C8                      __end_of_EUSART1_Initialize 09C8  
                                  __end_of_main 07AC                                    ?_send_RN2903 0006  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 0043  
                                 __activetblptr 000002                           ?_EUSART1_Transmit_ISR 0001  
                                        _ACTCON 000FB5                                          _ANSELA 000F5B  
                                        _ANSELB 000F5C                                          _ANSELC 000F5D  
                                        _ANSELD 000F5E                                          _ANSELE 000F5F  
                                        i2l2076 0BCA                                          i2l2096 083E  
                                        i2l1782 0C5C                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                        ___wmul 0BD2                                       ??___lwdiv 0009  
                                     ??___lwmod 0010                        ?_EUSART1_SetErrorHandler 0005  
                                        clear_0 09EE                                          clear_1 09FA  
                                        clear_2 0A06                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          _tx_buf 017C  
                                        _strcmp 0A6C                                ??_receive_RN2903 000E  
                                     ??_isdigit 0005                                    __mediumconst 7E36  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                 ??_EUSART1_Write 0005  
                                     ??_sprintf 0035                                 _eusart1RxBuffer 0200  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart1TxBuffer 013E  
                             _SYSTEM_Initialize 0C94                                      __accesstop 0060  
                       __end_of__initialization 0A0C                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                  __size_of_EUSART1_RxDataHandler 0020  
                 __end_of_EUSART1_RxDataHandler 0C60                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 0BF8                             ??_SYSTEM_Initialize 0007  
                          __end_of_EUSART1_Read 0B72                          ??_EUSART1_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 0844                       __end_of_SYSTEM_Initialize 0CA6  
                                  sprintf@width 0040                                   _eusart1RxHead 0050  
                                 _eusart1TxHead 0053                                   _eusart1RxTail 004F  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                 _eusart1TxTail 0052               _EUSART1_TxDefaultInterruptHandler 004B  
               ??_EUSART1_SetRxInterruptHandler 0007                              _DELAY_milliseconds 0C1C  
               __end_of_EUSART1_SetErrorHandler 0CD8                             ?_DELAY_milliseconds 0005  
                                       ?___wmul 0005                            __size_of_send_RN2903 0082  
                                       ?_strcmp 0005          __end_of_EUSART1_SetFramingErrorHandler 0CCE  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 0CC4  
                         receive_RN2903@rx_data 0060                    ?_EUSART1_DefaultErrorHandler 0001  
                          ??_DELAY_milliseconds 0007                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       __Hparam 0000                                         __Lparam 0000  
                               __size_of___wmul 0026                                         ___lwdiv 0A1A  
                                       ___lwmod 0AB6                                         __pcinit 09C8  
                                       __ramtop 0800                                         __ptext0 06FC  
                                       __ptext1 03BA                                         __ptext2 006A  
                                       __ptext3 0C60                                         __ptext4 0BD2  
                                       __ptext5 0AB6                                         __ptext6 0A1A  
                                       __ptext7 08D2                                         __ptext8 0B72  
                                       __ptext9 0844                           __end_of_config_RN2903 06FC  
                               __size_of_strcmp 004A                               __end_of_hexpowers 7E49  
                                       _dpowers 7E37                           _OSCILLATOR_Initialize 0C7E  
                                       _isdigit 0C60                              _EUSART1_Initialize 0954  
                      ??_PIN_MANAGER_Initialize 0005                   ??_EUSART1_DefaultErrorHandler 0001  
                    __size_of_SYSTEM_Initialize 0012                                         _sprintf 006A  
                          end_of_initialization 0A0C                             ?_EUSART1_Initialize 0001  
                                 __Lmediumconst 7E36                     _EUSART1_OverrunErrorHandler 0045  
         __end_of_EUSART1_SetRxInterruptHandler 0CBA          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 0CB0                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 003C  
                          ??_EUSART1_Initialize 0007                                         strcmp@r 000B  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0005  
                                  _EUSART1_Read 0B36            __size_of_EUSART1_DefaultErrorHandler 0006  
                  __end_of_INTERRUPT_Initialize 0CE8                                  __end_of___wmul 0BF8  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_strcmp 0AB6  
                           start_initialization 09C8                 __size_of_PIN_MANAGER_Initialize 003E  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
                         __end_of_EUSART1_Write 0BA8                             receive_RN2903@count 00B0  
                                      ??___wmul 0009                           _EUSART1_RxDataHandler 0C40  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00D7  
                                      ??_strcmp 0009                                  _eusart1RxCount 004E  
                                   __pbssCOMRAM 0043               _EUSART1_RxDefaultInterruptHandler 0049  
                 __size_of_EUSART1_Transmit_ISR 002A                                   __pcstackBANK0 0060  
                                  _isdigit$1287 0006                 ??_EUSART1_SetTxInterruptHandler 0007  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
                  __size_of_EUSART1_Receive_ISR 0098                         __size_of_receive_RN2903 008E  
                                   sprintf@flag 003F                                     sprintf@prec 003C  
                              ___lwdiv@dividend 0005                          _PIN_MANAGER_Initialize 0AF8  
                                     __pintcode 0008                                   ??_send_RN2903 0008  
                                 __pmediumconst 7E36                                        ?___lwdiv 0005  
                                      ?___lwmod 000C                    ??_INTERRUPT_InterruptManager 0001  
                                      _BAUDCON1 000FB8      __end_of_EUSART1_DefaultOverrunErrorHandler 0CDE  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 0CD8  
                                      ?_isdigit 0001                            _EUSART1_ErrorHandler 0043  
                   __size_of_DELAY_milliseconds 0024                         _EUSART1_SetErrorHandler 0CCE  
                                     _hexpowers 7E41                                ___lwdiv@quotient 0009  
                                      ?_sprintf 0011                            _INTERRUPT_Initialize 0CE4  
                                ___wmul@product 0009         EUSART1_SetErrorHandler@interruptHandler 0005  
                                      _PIE1bits 000F9D                                        i2u121_48 07D4  
                                      i2u121_49 07E8                                        i2u123_48 0800  
                                      i2u123_49 0814                                        i2u125_48 082A  
                                      i2u141_48 0028             __size_of_INTERRUPT_InterruptManager 005E  
                                      i2u144_48 003E                                        i2u144_49 0052  
                                      _PIR1bits 000F9E                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 000FD0                  DELAY_milliseconds@milliseconds 0005  
                            config_RN2903@F4925 00F7                              config_RN2903@F4927 00E7  
                            config_RN2903@F4929 00D7                               ___wmul@multiplier 0005  
                           __end_of_send_RN2903 0954                              config_RN2903@count 00D6  
                                   _INTCON2bits 000FF1                                       copy_data0 09DC  
                         ?_INTERRUPT_Initialize 0001                           EUSART1_Read@readValue 0005  
                            receive_RN2903@data 000C                          __size_of_config_RN2903 0342  
         __end_of_EUSART1_SetTxInterruptHandler 0CB0          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 0CA6                                        __Hrparam 0000  
                                      __Lrparam 0000                         ??_OSCILLATOR_Initialize 0005  
                   __size_of_EUSART1_Initialize 0074                                __size_of___lwdiv 0052  
                              __size_of___lwmod 0042                       ??_EUSART1_SetErrorHandler 0007  
           __end_of_EUSART1_DefaultErrorHandler 0CE4                     _EUSART1_DefaultErrorHandler 0CDE  
                                    sprintf@idx 0039                                      sprintf@val 003D  
                              __size_of_isdigit 001E                                 ___lwdiv@divisor 0007  
                               ___lwdiv@counter 000B                                        __ptext10 0A6C  
                                      __ptext11 0B36                                        __ptext20 0CBA  
                                      __ptext12 0C1C                                        __ptext21 0CC4  
                                      __ptext13 0C94                                        __ptext30 0000  
                                      __ptext22 0CCE                                        __ptext14 0AF8  
                                      __ptext15 0C7E                                        __ptext24 0BA8  
                                      __ptext16 0CE4                                        __ptext25 07AC  
                                      __ptext17 0954                                        __ptext26 0CD8  
                                      __ptext18 0CA6                                        __ptext27 0CE8  
                                      __ptext19 0CB0                                        __ptext28 0CDE  
                                      __ptext29 0C40                                __size_of_sprintf 0350  
                                _receive_RN2903 0844                                   __size_of_main 00B0  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        int$flags 0054  
                                   _send_RN2903 08D2              __end_of_INTERRUPT_InterruptManager 0066  
                    _INTERRUPT_InterruptManager 0008                     _EUSART1_FramingErrorHandler 0047  
                           _EUSART1_Receive_ISR 07AC                                   _config_RN2903 03BA  
                                    _INTCONbits 000FF2                                        isdigit@c 0007  
                        ??_INTERRUPT_Initialize 0005                          __end_of_receive_RN2903 08D2  
                                      intlevel2 0000                                       sprintf@ap 003A  
                                     sprintf@sp 0011                            ?_EUSART1_Receive_ISR 0001  
                              ___lwmod@dividend 000C                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 0CC4         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 0CBA                                      _RCSTA1bits 000FAB  
                  __end_of_EUSART1_Transmit_ISR 0BD2  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                          __size_of_EUSART1_Write 0036  
                            _eusart1RxLastError 004D                                  ?_config_RN2903 0001  
                                      sprintf@c 0042                                        sprintf@f 0013  
                                      strcmp@s1 0005                                        strcmp@s2 0007  
                               ___lwmod@divisor 000E                                 ___lwmod@counter 0010  
                               ?_receive_RN2903 000C                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 0B36                         ??_EUSART1_RxDataHandler 0001  
